<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kind="class" language="C++" prot="public">
    <compoundname>tracktable::analysis::detail::implementation::DBSCAN</compoundname>
    <includes refid="dbscan__implementation_8h" local="no">dbscan_implementation.h</includes>
    <templateparamlist>
      <param>
        <type>class PointT</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ab52a759378e7adb7111dea3ecfeeb910" prot="public" static="no">
        <type>PointT</type>
        <definition>typedef PointT tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::point_type</definition>
        <argsstring></argsstring>
        <name>point_type</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::point_type</qualifiedname>
        <briefdescription>
<para>This is the point type we will be clustering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="130" column="18" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a3320c141966e69bb5d9f41dde4676cef" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ab52a759378e7adb7111dea3ecfeeb910" kindref="member">point_type</ref> &gt;</type>
        <definition>typedef std::vector&lt;point_type&gt; tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::point_vector_type</definition>
        <argsstring></argsstring>
        <name>point_vector_type</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::point_vector_type</qualifiedname>
        <briefdescription>
<para>Container for points - convenience typedef only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="132" column="23" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ad838175f2a17e0039ec0d9a5a4b35921" prot="public" static="no">
        <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1_indexed_point" kindref="compound">IndexedPoint</ref>&lt; PointT &gt;</type>
        <definition>typedef IndexedPoint&lt;PointT&gt; tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::indexed_point_type</definition>
        <argsstring></argsstring>
        <name>indexed_point_type</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::indexed_point_type</qualifiedname>
        <briefdescription>
<para>Internal point type with cluster ID and point ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="134" column="24" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a267e84eeb33195ea9ba3ac43bb4cc786" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ad838175f2a17e0039ec0d9a5a4b35921" kindref="member">indexed_point_type</ref> &gt;</type>
        <definition>typedef std::vector&lt;indexed_point_type&gt; tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::indexed_point_vector_type</definition>
        <argsstring></argsstring>
        <name>indexed_point_vector_type</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::indexed_point_vector_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="135" column="23" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a2c63936869890bc9c9507f89751cf607" prot="public" static="no">
        <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1_d_b_s_c_a_n___index_by_iterator" kindref="compound">DBSCAN_IndexByIterator</ref>&lt; indexed_point_vector_type, <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ab52a759378e7adb7111dea3ecfeeb910" kindref="member">point_type</ref> &gt;</type>
        <definition>typedef DBSCAN_IndexByIterator&lt; indexed_point_vector_type, point_type &gt; tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::indexable_getter_type</definition>
        <argsstring></argsstring>
        <name>indexable_getter_type</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::indexable_getter_type</qualifiedname>
        <briefdescription>
<para>Abstraction of index into list of points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="145" column="2" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a7e773efc41f0687f55911980a8b8f47a" prot="public" static="no">
        <type>bgi::quadratic&lt; 16 &gt;</type>
        <definition>typedef bgi::quadratic&lt;16&gt; tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::rtree_parameter_type</definition>
        <argsstring></argsstring>
        <name>rtree_parameter_type</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::rtree_parameter_type</qualifiedname>
        <briefdescription>
<para>Balancing algorithm for rtree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="148" column="26" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ac0eb1a05b1df3451774537cbe9a2dcdb" prot="public" static="no">
        <type>indexed_point_vector_type::iterator</type>
        <definition>typedef indexed_point_vector_type::iterator tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::rtree_value_type</definition>
        <argsstring></argsstring>
        <name>rtree_value_type</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::rtree_value_type</qualifiedname>
        <briefdescription>
<para>This is what will actually be stored in the nodes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="151" column="56" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1aacbc69331e52bb1d0980d3e305c6c852" prot="public" static="no">
        <type>bgi::rtree&lt; <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ac0eb1a05b1df3451774537cbe9a2dcdb" kindref="member">rtree_value_type</ref>, <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a7e773efc41f0687f55911980a8b8f47a" kindref="member">rtree_parameter_type</ref>, <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a2c63936869890bc9c9507f89751cf607" kindref="member">indexable_getter_type</ref> &gt;</type>
        <definition>typedef bgi::rtree&lt; rtree_value_type, rtree_parameter_type, indexable_getter_type &gt; tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::rtree_type</definition>
        <argsstring></argsstring>
        <name>rtree_type</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::rtree_type</qualifiedname>
        <briefdescription>
<para>...And here&apos;s the rtree itself </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="158" column="2" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ae785abec922b786086ee20a500cc7d21" prot="public" static="no">
        <type>bg::model::box&lt; <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ab52a759378e7adb7111dea3ecfeeb910" kindref="member">point_type</ref> &gt;</type>
        <definition>typedef bg::model::box&lt;point_type&gt; tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::box_type</definition>
        <argsstring></argsstring>
        <name>box_type</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::box_type</qualifiedname>
        <briefdescription>
<para>Bounding box for nodes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="161" column="26" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9c3451df97912d86b542bff17a17cb04" prot="public" static="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>typedef std::vector&lt;int&gt; tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::int_vector_type</definition>
        <argsstring></argsstring>
        <name>int_vector_type</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::int_vector_type</qualifiedname>
        <briefdescription>
<para>Container type for clustering results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="164" column="23" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a394b53abb384c46b1c806477efa48f38" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9c3451df97912d86b542bff17a17cb04" kindref="member">int_vector_type</ref> &gt;</type>
        <definition>typedef std::vector&lt;int_vector_type&gt; tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::int_vector_vector_type</definition>
        <argsstring></argsstring>
        <name>int_vector_vector_type</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::int_vector_vector_type</qualifiedname>
        <briefdescription>
<para>Container type for cluster membership lists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="167" column="23" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="167" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ace16666f49d1ac46b4c08269e55493a9" prot="protected" static="no" mutable="no">
        <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a394b53abb384c46b1c806477efa48f38" kindref="member">int_vector_vector_type</ref></type>
        <definition>int_vector_vector_type tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::ClusterMembership</definition>
        <argsstring></argsstring>
        <name>ClusterMembership</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::ClusterMembership</qualifiedname>
        <briefdescription>
<para>List of points belonging to each cluster. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="608" column="26" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9cd649bd33a92f3d2dc4e5736f4b3293" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::num_range_queries</definition>
        <argsstring></argsstring>
        <name>num_range_queries</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::num_range_queries</qualifiedname>
        <briefdescription>
<para>How many range queries we make (performance statistic) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="610" column="7" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1aa91427603df48072c76f4c46a9302b46" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::num_points_processed</definition>
        <argsstring></argsstring>
        <name>num_points_processed</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::num_points_processed</qualifiedname>
        <briefdescription>
<para>How many points we&apos;ve processed so far (progress statistic) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="612" column="7" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a064ba262a99fccc2a3b21a8ec85f1c9b" prot="protected" static="no" mutable="no">
        <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9c3451df97912d86b542bff17a17cb04" kindref="member">int_vector_type</ref></type>
        <definition>int_vector_type tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::num_core_points</definition>
        <argsstring></argsstring>
        <name>num_core_points</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::num_core_points</qualifiedname>
        <briefdescription>
<para>How many points are on the interiors of the clusters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="614" column="19" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a517b74e616a5cc010f16af790e75b075" prot="protected" static="no" mutable="no">
        <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9c3451df97912d86b542bff17a17cb04" kindref="member">int_vector_type</ref></type>
        <definition>int_vector_type tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::core_point_avg_num_neighbors</definition>
        <argsstring></argsstring>
        <name>core_point_avg_num_neighbors</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::core_point_avg_num_neighbors</qualifiedname>
        <briefdescription>
<para>How many neighbors each core point has (performance statistic) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="616" column="19" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a6151b8bb2c87adb4871a885e5dd2fe0f" prot="protected" static="no" mutable="no">
        <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9c3451df97912d86b542bff17a17cb04" kindref="member">int_vector_type</ref></type>
        <definition>int_vector_type tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::total_num_neighbors</definition>
        <argsstring></argsstring>
        <name>total_num_neighbors</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::total_num_neighbors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="617" column="19" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9fd5573534d2aa67a93105724f7a8278" prot="protected" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::InputPointCount</definition>
        <argsstring></argsstring>
        <name>InputPointCount</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::InputPointCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="618" column="15" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="618" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a648b7910eb2a6ccf1d5062815a696b99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::DBSCAN</definition>
        <argsstring>()</argsstring>
        <name>DBSCAN</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::DBSCAN</qualifiedname>
        <briefdescription>
<para>Initialize an empty clusterer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="174" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a5df1b696586c5f6ddca1516e42acd190" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::~DBSCAN</definition>
        <argsstring>()</argsstring>
        <name>~DBSCAN</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::~DBSCAN</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="177" column="11" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1aba949ba51c0aa80e9466101d85b9af5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class IteratorT</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::learn_clusters</definition>
        <argsstring>(IteratorT point_begin, IteratorT point_end, point_type const &amp;epsilon_box_half_span, unsigned int min_cluster_size, bool L2=false)</argsstring>
        <name>learn_clusters</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::learn_clusters</qualifiedname>
        <param>
          <type>IteratorT</type>
          <declname>point_begin</declname>
        </param>
        <param>
          <type>IteratorT</type>
          <declname>point_end</declname>
        </param>
        <param>
          <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ab52a759378e7adb7111dea3ecfeeb910" kindref="member">point_type</ref> const &amp;</type>
          <declname>epsilon_box_half_span</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>min_cluster_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>L2</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Learn cluster labels for a set of points. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the method that you will call to run <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref>.</para>
<para>You will need to call <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a255b8517cd09860bdeb25a06e067bf87" kindref="member">cluster_membership_lists()</ref> or <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1aefdcaa766b5a29d59fb592f1d8633707" kindref="member">point_cluster_labels()</ref> to get the results back.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">point_begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator for beginning of input points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">point_end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator past end of input points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">epsilon_box_half_span</parametername>
</parameternamelist>
<parameterdescription>
<para>&quot;Nearby&quot; distance in each dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">min_cluster_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum number of points for a cluster </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of clusters detected (cluster 0 is noise) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="194" column="7" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="194" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a255b8517cd09860bdeb25a06e067bf87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::cluster_membership_lists</definition>
        <argsstring>(int_vector_vector_type &amp;output)</argsstring>
        <name>cluster_membership_lists</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::cluster_membership_lists</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a394b53abb384c46b1c806477efa48f38" kindref="member">int_vector_vector_type</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Return the point IDs belonging to each cluster. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is the first of two ways to get clustering results back from <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref>. Given a <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref> run that detected C clusters, this method will return a std::vector of C std::vector&lt;int&gt;. Each vector lists the points that belong to a single cluster.</para>
<para>Clusters 1 through C-1 are the &quot;real&quot; clusters. Cluster 0 is the noise cluster comprising all points that (1) did not have enough nearby neighbors to qualify as cluster points in their own right and (2) were not neighbors of any points that did.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">output</parametername>
</parameternamelist>
<parameterdescription>
<para>Cluster membership lists. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="257" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1aefdcaa766b5a29d59fb592f1d8633707" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::point_cluster_labels</definition>
        <argsstring>(int_vector_type &amp;out_labels)</argsstring>
        <name>point_cluster_labels</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::point_cluster_labels</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9c3451df97912d86b542bff17a17cb04" kindref="member">int_vector_type</ref> &amp;</type>
          <declname>out_labels</declname>
        </param>
        <briefdescription>
<para>Return the cluster ID for each point. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is the second of two ways to get clustering results back from <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref>. Given a <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref> run on P points that detected C clusters, this method will return a std::vector&lt;int&gt; with P elements. Each element will have a value between 0 and C-1 inclusive.</para>
<para>Clusters 1 through C-1 are the &quot;real&quot; clusters. Cluster 0 is the noise cluster comprising all the points that (1) did not have enough nearby neighbors to qualify as cluster points in their own right and (2) were not neighbors of any points that did.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">cluster_labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Labels for each point in the input. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="278" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="278" bodyend="294"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a2f882287132500cec4267ae32200fc11" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::get_cluster_id</definition>
        <argsstring>(rtree_value_type const &amp;iter)</argsstring>
        <name>get_cluster_id</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::get_cluster_id</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ac0eb1a05b1df3451774537cbe9a2dcdb" kindref="member">rtree_value_type</ref> const &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Internal method. </para>
        </briefdescription>
        <detaileddescription>
<para>We use this when processing the results of a range query. This is just an accessor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="304" column="7" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a5915359f9d08d6e39bcd523c17778b24" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::set_cluster_id</definition>
        <argsstring>(rtree_value_type &amp;iter, int new_id)</argsstring>
        <name>set_cluster_id</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::set_cluster_id</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ac0eb1a05b1df3451774537cbe9a2dcdb" kindref="member">rtree_value_type</ref> &amp;</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new_id</declname>
        </param>
        <briefdescription>
<para>Internal method. </para>
        </briefdescription>
        <detaileddescription>
<para>We use this when setting cluster IDs for many points at once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="313" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="313" bodyend="316"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ab29dbb43e9fc008b902f5ea2dd10560b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::compute_cluster_membership</definition>
        <argsstring>(indexed_point_vector_type &amp;points, unsigned int min_cluster_size, const point_type &amp;epsilon_box_half_span, rtree_type &amp;rtree, bool L2)</argsstring>
        <name>compute_cluster_membership</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::compute_cluster_membership</qualifiedname>
        <param>
          <type>indexed_point_vector_type &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>min_cluster_size</declname>
        </param>
        <param>
          <type>const <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ab52a759378e7adb7111dea3ecfeeb910" kindref="member">point_type</ref> &amp;</type>
          <declname>epsilon_box_half_span</declname>
        </param>
        <param>
          <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1aacbc69331e52bb1d0980d3e305c6c852" kindref="member">rtree_type</ref> &amp;</type>
          <declname>rtree</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>L2</declname>
        </param>
        <briefdescription>
<para>Learn cluster assignments for all points. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the driver method that implements the skeleton of <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">points</parametername>
</parameternamelist>
<parameterdescription>
<para>Points with indices attached </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">min_cluster_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum number of points in neighborhood required to define a core point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">epsilon_box_half_span</parametername>
</parameternamelist>
<parameterdescription>
<para>Search range in each direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rtree</parametername>
</parameternamelist>
<parameterdescription>
<para>Boost <ref refid="classtracktable_1_1_r_tree" kindref="compound">RTree</ref> to accelerate neighborhood queries </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="332" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="332" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9411c7355f7f7043c0fb695afa47eedc" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::expand_cluster</definition>
        <argsstring>(rtree_value_type &amp;seed_point, unsigned int min_cluster_size, const point_type &amp;epsilon_box_half_span, unsigned int next_cluster_id, rtree_type &amp;rtree, bool L2)</argsstring>
        <name>expand_cluster</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::expand_cluster</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ac0eb1a05b1df3451774537cbe9a2dcdb" kindref="member">rtree_value_type</ref> &amp;</type>
          <declname>seed_point</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>min_cluster_size</declname>
        </param>
        <param>
          <type>const <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ab52a759378e7adb7111dea3ecfeeb910" kindref="member">point_type</ref> &amp;</type>
          <declname>epsilon_box_half_span</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>next_cluster_id</declname>
        </param>
        <param>
          <type><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1aacbc69331e52bb1d0980d3e305c6c852" kindref="member">rtree_type</ref> &amp;</type>
          <declname>rtree</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>L2</declname>
        </param>
        <briefdescription>
<para>Discover a single cluster. </para>
        </briefdescription>
        <detaileddescription>
<para>This method contains the heart of <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref>: searching the neighborhood of a single point to discover whether it is in the interior of a cluster and, if so, discovering the rest of that cluster.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">seed_point</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to examine for cluster-ness </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">min_cluster_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum neighbor count for core points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">epsilon_box_half_span</parametername>
</parameternamelist>
<parameterdescription>
<para>Search range in each direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">next_cluster_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Numeric ID for new cluster </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rtree</parametername>
</parameternamelist>
<parameterdescription>
<para>Search structure for neighbor queries </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean - whether or not a new cluster was discovered </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="449" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="449" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a11b687d1438bfc83eae79313a4681c43" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::build_cluster_membership_lists</definition>
        <argsstring>(const indexed_point_vector_type &amp;points, unsigned int max_cluster_id)</argsstring>
        <name>build_cluster_membership_lists</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::build_cluster_membership_lists</qualifiedname>
        <param>
          <type>const indexed_point_vector_type &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>max_cluster_id</declname>
        </param>
        <briefdescription>
<para>Assemble cluster membership lists from points. </para>
        </briefdescription>
        <detaileddescription>
<para>The clustering algorithm stores its results in the indexed point list. This function extracts those results and builds cluster membership lists that are more useful to the user.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">points</parametername>
</parameternamelist>
<parameterdescription>
<para>Points labeled with cluster IDs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[in[</parametername>
</parameternamelist>
<parameterdescription>
<para>max_cluster_id ID of last cluster found </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="547" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="547" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a93415449b174e0869056a4b747cd395a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::analysis::detail::implementation::DBSCAN&lt; PointT &gt;::ellipsoid_filter</definition>
        <argsstring>(std::vector&lt; rtree_value_type &gt; &amp;points, const point_type &amp;box_center, const point_type &amp;epsilon_box_half_span)</argsstring>
        <name>ellipsoid_filter</name>
        <qualifiedname>tracktable::analysis::detail::implementation::DBSCAN::ellipsoid_filter</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ac0eb1a05b1df3451774537cbe9a2dcdb" kindref="member">rtree_value_type</ref> &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ab52a759378e7adb7111dea3ecfeeb910" kindref="member">point_type</ref> &amp;</type>
          <declname>box_center</declname>
        </param>
        <param>
          <type>const <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ab52a759378e7adb7111dea3ecfeeb910" kindref="member">point_type</ref> &amp;</type>
          <declname>epsilon_box_half_span</declname>
        </param>
        <briefdescription>
<para>Removes points from a box that are not in the ellipsoid. </para>
        </briefdescription>
        <detaileddescription>
<para>This is essentially allow an extension to a more traditional <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref> by taking points from an ellipsoid that essentially has axes that are the length of the epsilon_box_half_span parameters. If they are all the same, you just a sphere, and a traditional <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">points</parametername>
</parameternamelist>
<parameterdescription>
<para>Points labeled with cluster IDs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">epsilon_box_half_span</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaling parameters for ellipsoid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="574" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="574" bodyend="604"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Cluster points using the <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref> algorithm. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref> is a non-parametric clustering algorithm that defines a point in a cluster as &quot;a point with more than N neighbors inside a
search radius R&quot;. N and R are user-specified parameters. The consequence of this definition is that areas of points with a certain minimum density form clusters regardless of their shape.</para>
<para>In order to use <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref> you must supply the following parameters:</para>
<para><itemizedlist>
<listitem><para>A list of points to cluster. These can be in any coordinate system supported by <computeroutput>boost::geometry</computeroutput> and any container that provides begin() and end() iterators.</para>
</listitem><listitem><para>A search box: the distance that a point can be in any dimension in order to count as &quot;nearby&quot;. Note that we use a search box instead of the sphere that the original <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref> implementation requires. This helps when you have a space where different dimensions have different meaning such as longitude/latitude (sensible values are on the order of 0-200 in each dimension) and altitude (sensible values are up to 15000 meters).</para>
</listitem><listitem><para>A minimum cluster size: Any point that has at least this many points within its search box is part of a cluster.</para>
</listitem></itemizedlist>
</para>
<para>If you would rather use a slightly more convenient interface please refer to the functions in <computeroutput><ref refid="_compute_d_b_s_c_a_n_clustering_8h_source" kindref="compound">Analysis/ComputeDBSCANClustering.h</ref></computeroutput>.</para>
<para>For more information about the <ref refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n" kindref="compound">DBSCAN</ref> algorithm please refer to the original paper: Ester, Martin; Kriegel, Hans-Peter; Sander, Jörg; Xu, Xiaowei (1996). &quot;A density-based algorithm for discovering
clusters in large spatial databases with noise&quot;. In Simoudis, Evangelos; Han, Jiawei; Fayyad, Usama M. &quot;Proceedings of the Second
International Conference on Knowledge Discovery and Data Mining
(KDD-96)&quot;. </para>
    </detaileddescription>
    <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" line="126" column="1" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Analysis/detail/dbscan_implementation.h" bodystart="127" bodyend="619"/>
    <listofallmembers>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ae785abec922b786086ee20a500cc7d21" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>box_type</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a11b687d1438bfc83eae79313a4681c43" prot="protected" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>build_cluster_membership_lists</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a255b8517cd09860bdeb25a06e067bf87" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>cluster_membership_lists</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ace16666f49d1ac46b4c08269e55493a9" prot="protected" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>ClusterMembership</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ab29dbb43e9fc008b902f5ea2dd10560b" prot="protected" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>compute_cluster_membership</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a517b74e616a5cc010f16af790e75b075" prot="protected" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>core_point_avg_num_neighbors</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a648b7910eb2a6ccf1d5062815a696b99" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>DBSCAN</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a93415449b174e0869056a4b747cd395a" prot="protected" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>ellipsoid_filter</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9411c7355f7f7043c0fb695afa47eedc" prot="protected" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>expand_cluster</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a2f882287132500cec4267ae32200fc11" prot="private" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>get_cluster_id</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a2c63936869890bc9c9507f89751cf607" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>indexable_getter_type</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ad838175f2a17e0039ec0d9a5a4b35921" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>indexed_point_type</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a267e84eeb33195ea9ba3ac43bb4cc786" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>indexed_point_vector_type</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9fd5573534d2aa67a93105724f7a8278" prot="protected" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>InputPointCount</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9c3451df97912d86b542bff17a17cb04" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>int_vector_type</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a394b53abb384c46b1c806477efa48f38" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>int_vector_vector_type</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1aba949ba51c0aa80e9466101d85b9af5f" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>learn_clusters</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a064ba262a99fccc2a3b21a8ec85f1c9b" prot="protected" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>num_core_points</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1aa91427603df48072c76f4c46a9302b46" prot="protected" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>num_points_processed</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a9cd649bd33a92f3d2dc4e5736f4b3293" prot="protected" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>num_range_queries</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1aefdcaa766b5a29d59fb592f1d8633707" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>point_cluster_labels</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ab52a759378e7adb7111dea3ecfeeb910" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>point_type</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a3320c141966e69bb5d9f41dde4676cef" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>point_vector_type</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a7e773efc41f0687f55911980a8b8f47a" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>rtree_parameter_type</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1aacbc69331e52bb1d0980d3e305c6c852" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>rtree_type</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1ac0eb1a05b1df3451774537cbe9a2dcdb" prot="public" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>rtree_value_type</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a5915359f9d08d6e39bcd523c17778b24" prot="private" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>set_cluster_id</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a6151b8bb2c87adb4871a885e5dd2fe0f" prot="protected" virt="non-virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>total_num_neighbors</name></member>
      <member refid="classtracktable_1_1analysis_1_1detail_1_1implementation_1_1_d_b_s_c_a_n_1a5df1b696586c5f6ddca1516e42acd190" prot="public" virt="virtual"><scope>tracktable::analysis::detail::implementation::DBSCAN</scope><name>~DBSCAN</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
