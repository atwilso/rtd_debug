<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structtracktable_1_1detail_1_1check__coordinate__equality" kind="struct" language="C++" prot="public">
    <compoundname>tracktable::detail::check_coordinate_equality</compoundname>
    <includes refid="_check_coordinate_equality_8h" local="no">CheckCoordinateEquality.h</includes>
    <templateparamlist>
      <param>
        <type>std::size_t</type>
        <declname>i</declname>
        <defname>i</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structtracktable_1_1detail_1_1check__coordinate__equality_1a932496c19f11cbc0137be77cad78c03d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class left_point_type</type>
          </param>
          <param>
            <type>class right_point_type</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool tracktable::detail::check_coordinate_equality&lt; i &gt;::apply</definition>
        <argsstring>(left_point_type const &amp;left, right_point_type const &amp;right)</argsstring>
        <name>apply</name>
        <qualifiedname>tracktable::detail::check_coordinate_equality::apply</qualifiedname>
        <param>
          <type>left_point_type const &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>right_point_type const &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/detail/points/CheckCoordinateEquality.h" line="63" column="22" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/detail/points/CheckCoordinateEquality.h" bodystart="63" bodyend="74"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Helper object for checking equality between points. </para>
    </briefdescription>
    <detaileddescription>
<para>Compare two points for equality by comparing all of their coordinates. It is sufficient for the points to have the same number of points and coordinates that compare equal: they need not have the same data type.</para>
<para>You will probably not need to instantiate this directly. It is, however, an illustration of how to iterate over an object&apos;s members at compile time. You need two classes. First you need the version below templated on i. Then you need a specialization with i=0 to serve as the base case. </para>
    </detaileddescription>
    <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/detail/points/CheckCoordinateEquality.h" line="60" column="1" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/detail/points/CheckCoordinateEquality.h" bodystart="61" bodyend="75"/>
    <listofallmembers>
      <member refid="structtracktable_1_1detail_1_1check__coordinate__equality_1a932496c19f11cbc0137be77cad78c03d" prot="public" virt="non-virtual"><scope>tracktable::detail::check_coordinate_equality</scope><name>apply</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
