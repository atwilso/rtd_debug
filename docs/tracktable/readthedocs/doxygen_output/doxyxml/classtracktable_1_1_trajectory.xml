<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classtracktable_1_1_trajectory" kind="class" language="C++" prot="public">
    <compoundname>tracktable::Trajectory</compoundname>
    <includes refid="_trajectory_8h" local="no">Trajectory.h</includes>
    <templateparamlist>
      <param>
        <type>class PointT</type>
      </param>
    </templateparamlist>
    <sectiondef kind="user-defined">
      <header>Methods that allow a Trajectory to be used like std::vector</header>
      <description><para>Here are all the methods that make this container usable just like a std::vector.</para>
<para>There&apos;s no magic here <ndash/> all we do is forward to the Points vector. </para>
</description>
      <memberdef kind="variable" id="classtracktable_1_1_trajectory_1acb1c7adb5d5ee5f0ed43dd91a82bae99" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacetracktable_1a1b220fef4a0f524b45d526c61a5fea6a" kindref="member">uuid_type</ref></type>
        <definition>uuid_type tracktable::Trajectory&lt; PointT &gt;::UUID</definition>
        <argsstring></argsstring>
        <name>UUID</name>
        <qualifiedname>tracktable::Trajectory::UUID</qualifiedname>
        <briefdescription>
<para>Internal storage for the trajectory UUID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="812" column="13" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtracktable_1_1_trajectory_1a52860f598486d0d654f9bd969059f707" prot="protected" static="no" mutable="no">
        <type>point_vector_type</type>
        <definition>point_vector_type tracktable::Trajectory&lt; PointT &gt;::Points</definition>
        <argsstring></argsstring>
        <name>Points</name>
        <qualifiedname>tracktable::Trajectory::Points</qualifiedname>
        <briefdescription>
<para>Internal storage for the points in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="815" column="21" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="815" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtracktable_1_1_trajectory_1aadcc6f6b16f9a7de58a064b4450ec95c" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacetracktable_1a1025d06e8ca7ebb7e66de16aa92fdc12" kindref="member">PropertyMap</ref></type>
        <definition>PropertyMap tracktable::Trajectory&lt; PointT &gt;::Properties</definition>
        <argsstring></argsstring>
        <name>Properties</name>
        <qualifiedname>tracktable::Trajectory::Properties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="817" column="15" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="817" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a2e76b8bad09400b1462ee9135e1ae19a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type tracktable::Trajectory&lt; PointT &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>tracktable::Trajectory::size</qualifiedname>
        <briefdescription>
<para>Return the length of the trajectory in points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="419" column="13" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="419" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a2e8d6eaa3fda858c43bcfadeaf1e9386" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type tracktable::Trajectory&lt; PointT &gt;::max_size</definition>
        <argsstring>() const</argsstring>
        <name>max_size</name>
        <qualifiedname>tracktable::Trajectory::max_size</qualifiedname>
        <briefdescription>
<para>Return the maximum number of entries the points array can hold. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="426" column="13" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="426" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a0db842f3b69bb7bc31f0dbfe14b0db51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type tracktable::Trajectory&lt; PointT &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <qualifiedname>tracktable::Trajectory::capacity</qualifiedname>
        <briefdescription>
<para>Return the current allocated capacity of the points array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="433" column="13" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="433" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1afca0d56029e01e620feaf8df4c6ce9bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::resize</definition>
        <argsstring>(size_type new_size, point_type default_value=point_type())</argsstring>
        <name>resize</name>
        <qualifiedname>tracktable::Trajectory::resize</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>new_size</declname>
        </param>
        <param>
          <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref></type>
          <declname>default_value</declname>
          <defval><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref>()</defval>
        </param>
        <briefdescription>
<para>Resize the points array to contain exactly the number of entries requested. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired length of the vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value for newly allocated entries </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="443" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="443" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a00e26c610525256edc1901bccf8ede3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tracktable::Trajectory&lt; PointT &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>tracktable::Trajectory::empty</qualifiedname>
        <briefdescription>
<para>Return whether or not the trajectory is empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="450" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="450" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a474e8824c8f8dd9d0fc1b87bf3fd6e66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::reserve</definition>
        <argsstring>(size_type n)</argsstring>
        <name>reserve</name>
        <qualifiedname>tracktable::Trajectory::reserve</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Preallocate enough space in the array for the specified number of entries. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>Allocate space for this many points. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="459" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="459" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1aac6c72fc0d8cc08368827c951e871462" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tracktable::Trajectory&lt; PointT &gt;::operator==</definition>
        <argsstring>(const Trajectory &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>tracktable::Trajectory::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classtracktable_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Check whether one trajectory is equal to another by comparing all the points. </para>
        </briefdescription>
        <detaileddescription>
<para>Two trajectories are equal if all of their points are equal.</para>
<para>This method does not check whether the UUID&apos;s of the trajectories are equal. It only checks the points of the trajectories.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtracktable_1_1_trajectory" kindref="compound">Trajectory</ref> for comparison </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="486" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="486" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a826bac1333e2207e1a9c5323abc206d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tracktable::Trajectory&lt; PointT &gt;::operator!=</definition>
        <argsstring>(const Trajectory &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>tracktable::Trajectory::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classtracktable_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Check whether two trajectories are unequal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtracktable_1_1_trajectory" kindref="compound">Trajectory</ref> for comparison </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="497" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="497" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a34023182a6215ab2b3097263c37fdbb6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref> const &amp;</type>
        <definition>point_type const  &amp; tracktable::Trajectory&lt; PointT &gt;::operator[]</definition>
        <argsstring>(size_type i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>tracktable::Trajectory::operator[]</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return a given point from the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the requested point from the trajectory. It is the caller&apos;s responsibility to ensure that a valid index has been requested.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of desired point </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="510" column="20" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="510" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a551d6da43c7b35f7d58c4d2429cbd7d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref> &amp;</type>
        <definition>point_type &amp; tracktable::Trajectory&lt; PointT &gt;::operator[]</definition>
        <argsstring>(size_type i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>tracktable::Trajectory::operator[]</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return a mutable reference to a given point in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>As with the const version of operator[], it is the caller&apos;s responsibility to ensure that a valid index has been requested.</para>
<para><simplesect kind="note"><para>If you change the point&apos;s coordinates you are responsible for calling trajectory-&gt;compute_current_length(i) to update the points&apos; current_length parameter.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of desired point </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="526" column="14" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="526" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a6365f4c2d2450fe0b2a00a828b6365bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::push_back</definition>
        <argsstring>(point_type const &amp;pt)</argsstring>
        <name>push_back</name>
        <qualifiedname>tracktable::Trajectory::push_back</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref> const &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Append a point to the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that this uses copy semantics rather than move semantics. Since move semantics are part of C++11 we will not use them until we can be reasonable sure that suitable compilers are available in all environments that we care about.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to append</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Why do we have this alias? </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="542" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="542" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1ad78c438f70565341f3b2667230f9d331" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref> &amp;</type>
        <definition>point_type &amp; tracktable::Trajectory&lt; PointT &gt;::at</definition>
        <argsstring>(size_type i)</argsstring>
        <name>at</name>
        <qualifiedname>tracktable::Trajectory::at</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Retrieve the point at a given index with bounds checking. </para>
        </briefdescription>
        <detaileddescription>
<para>Retrieve a point. Unlike operator[], <ref refid="classtracktable_1_1_trajectory_1ad78c438f70565341f3b2667230f9d331" kindref="member">at()</ref> does bounds checking and will throw an exception if you ask for a point outside the range [0, num_points).</para>
<para>This version of the function will be called if you try to modify the point. For example:</para>
<para>my_trajectory.at(3).set_latitude(15);</para>
<para><simplesect kind="note"><para>If you modify the point&apos;s coordinates, you are responsible for calling trajectory-&gt;update_current_length(i).</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>Which point to retrieve </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Mutable reference to the requested point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="565" column="14" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="565" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a1f6546dd74e8fa0464bfa1238690b8db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref> const &amp;</type>
        <definition>point_type const  &amp; tracktable::Trajectory&lt; PointT &gt;::at</definition>
        <argsstring>(size_type i) const</argsstring>
        <name>at</name>
        <qualifiedname>tracktable::Trajectory::at</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Retrieve the point at a given index with bounds checking. </para>
        </briefdescription>
        <detaileddescription>
<para>Retrieve a point. Unlike operator[], <ref refid="classtracktable_1_1_trajectory_1ad78c438f70565341f3b2667230f9d331" kindref="member">at()</ref> does bounds checking and will throw an exception if you ask for a point outside the range [0, num_points).</para>
<para>This version of the function will be called if the compiler can tell that you&apos;re not trying to modify the point. For example:</para>
<para><ref refid="classtracktable_1_1_trajectory_point" kindref="compound">TrajectoryPoint</ref> my_point = my_trajectory.at(3);</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>Which point to retrieve </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Immutable reference to the requested point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="584" column="20" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="584" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a3cc235f0bbb2205f0d5a2b3d6e4a6d23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator tracktable::Trajectory&lt; PointT &gt;::erase</definition>
        <argsstring>(iterator position)</argsstring>
        <name>erase</name>
        <qualifiedname>tracktable::Trajectory::erase</qualifiedname>
        <param>
          <type>iterator</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Remove a point from the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>Delete the point at the specified position (specified by an iterator). The points after the one deleted will be moved up one spot to fill the gap.</para>
<para><simplesect kind="note"><para>This operation takes linear time in the number of points in the trajectory.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing at the location to erase. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="600" column="12" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="600" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a66fa66bb0fe57ef60d06ae2a73eddbf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator tracktable::Trajectory&lt; PointT &gt;::erase</definition>
        <argsstring>(iterator first, iterator last)</argsstring>
        <name>erase</name>
        <qualifiedname>tracktable::Trajectory::erase</qualifiedname>
        <param>
          <type>iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>iterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Remove a range of points from the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>Delete points from trajectories starting at &apos;first&apos; and ending at the point just before &apos;last&apos;. Points after the deleted range will be moved up to fill the gap.</para>
<para><simplesect kind="note"><para>This operation takes linear time in the number of points in the trajectory.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">first</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing at the first point to erase </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">last</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the location after the last point to erase </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="624" column="12" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="624" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a9166d1bda8d4791f68bc49e3cdd6a17e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>tracktable::Trajectory::clear</qualifiedname>
        <briefdescription>
<para>Reset the trajectory to an empty state. </para>
        </briefdescription>
        <detaileddescription>
<para>This clears out the vector of points. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="639" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="639" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1ac54fa8e8176246a99095e9a468a889f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref> &amp;</type>
        <definition>point_type &amp; tracktable::Trajectory&lt; PointT &gt;::front</definition>
        <argsstring>()</argsstring>
        <name>front</name>
        <qualifiedname>tracktable::Trajectory::front</qualifiedname>
        <briefdescription>
<para>Return the first point in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>First point in trajectory (mutable reference)</para>
</simplesect>
<simplesect kind="note"><para>If you call this on an empty trajectory the behavior is undefined. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="651" column="14" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="651" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a13ed8aec90926f87f30ad83f64f18385" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref> const &amp;</type>
        <definition>point_type const  &amp; tracktable::Trajectory&lt; PointT &gt;::front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <qualifiedname>tracktable::Trajectory::front</qualifiedname>
        <briefdescription>
<para>Return the (immutable) first point in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>First point in trajectory (immutable reference)</para>
</simplesect>
<simplesect kind="note"><para>If you call this on an empty trajectory the behavior is undefined. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="663" column="21" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="663" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a5a89075c7122aea5f48b60b5b2d6270c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref> &amp;</type>
        <definition>point_type &amp; tracktable::Trajectory&lt; PointT &gt;::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <qualifiedname>tracktable::Trajectory::back</qualifiedname>
        <briefdescription>
<para>Return the last point in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Last point in trajectory (mutable reference)</para>
</simplesect>
<simplesect kind="note"><para>If you call this on an empty trajectory the behavior is undefined. Dereferencing <ref refid="classtracktable_1_1_trajectory_1a5a89075c7122aea5f48b60b5b2d6270c" kindref="member">back()</ref> on an empty trajectory will probably crash your program. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="677" column="14" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="677" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1af069ff91341a497850f8abca7a6127a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref> const &amp;</type>
        <definition>point_type const  &amp; tracktable::Trajectory&lt; PointT &gt;::back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <qualifiedname>tracktable::Trajectory::back</qualifiedname>
        <briefdescription>
<para>Return the (immutable) last point in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Last point in trajectory (immutable reference)</para>
</simplesect>
<simplesect kind="note"><para>If you call this on an empty trajectory the behavior is undefined. Dereferencing <ref refid="classtracktable_1_1_trajectory_1a5a89075c7122aea5f48b60b5b2d6270c" kindref="member">back()</ref> on an empty trajectory will probably crash your program. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="691" column="21" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="691" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1aab2cf5b98b136dd6823a258c54ffb5ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::insert</definition>
        <argsstring>(int index, point_type const &amp;value)</argsstring>
        <name>insert</name>
        <qualifiedname>tracktable::Trajectory::insert</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref> const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Insert a single element into the trajectory at an arbitrary index. </para>
        </briefdescription>
        <detaileddescription>
<para>Insert a point into any index in the trajectory. All points after this location will be moved farther down.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Location to insert the point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to insert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="704" column="9" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="704" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1aaeb6b042b0d9eab09cee25be46af4bac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator tracktable::Trajectory&lt; PointT &gt;::insert</definition>
        <argsstring>(iterator position, point_type const &amp;value)</argsstring>
        <name>insert</name>
        <qualifiedname>tracktable::Trajectory::insert</qualifiedname>
        <param>
          <type>iterator</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref> const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Insert a single element into the trajectory at an arbitrary position. </para>
        </briefdescription>
        <detaileddescription>
<para>Insert a point into any position in the trajectory. All points after this location will be moved farther down.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>Location to insert the point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to insert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="718" column="12" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="718" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a0dc27fdb26050a75ceba18932f32c46b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::insert</definition>
        <argsstring>(iterator position, size_type n, point_type const &amp;value)</argsstring>
        <name>insert</name>
        <qualifiedname>tracktable::Trajectory::insert</qualifiedname>
        <param>
          <type>iterator</type>
          <declname>position</declname>
        </param>
        <param>
          <type>size_type</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref> const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Fill a range in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>Insert n copes of the point specified as &apos;value&apos; starting at the specified &apos;position&apos;. All points after this location will be moved farther down in the trajectory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to insert the points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>How many points to insert </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>What point to insert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="735" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="735" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1ad1593fae980c55b29a9ecf11aeb0e31f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::insert</definition>
        <argsstring>(iterator position, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <qualifiedname>tracktable::Trajectory::insert</qualifiedname>
        <param>
          <type>iterator</type>
          <declname>position</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>Insert a range of points into the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>Insert all points in the range [first, last) into the trajectory. All points after this location will be moved farther down in the trajectory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>Where to start inserting the points </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">first</parametername>
</parameternamelist>
<parameterdescription>
<para>The first point to insert </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">last</parametername>
</parameternamelist>
<parameterdescription>
<para>The location after the last point to insert </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="752" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="752" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a9081b15769ca2fe1599c2d70fb8f45f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::compute_current_features</definition>
        <argsstring>(std::size_t start_index)</argsstring>
        <name>compute_current_features</name>
        <qualifiedname>tracktable::Trajectory::compute_current_features</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>start_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="758" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="758" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a9fe4d5edf449f7675d5cf9e187f3f581" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator tracktable::Trajectory&lt; PointT &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>tracktable::Trajectory::begin</qualifiedname>
        <briefdescription>
<para>Return an iterator pointing to the beginning of the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>The point underneath this iterator can be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="834" column="12" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="834" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1ac16a3959f6a4fe5165a62c75cba7fa97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator tracktable::Trajectory&lt; PointT &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>tracktable::Trajectory::begin</qualifiedname>
        <briefdescription>
<para>Return an iterator pointing to the beginning of the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>The point underneath this iterator cannot be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="840" column="18" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="840" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1aa9fe5930da929365d69ae129a18cfee3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator tracktable::Trajectory&lt; PointT &gt;::cbegin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cbegin</name>
        <qualifiedname>tracktable::Trajectory::cbegin</qualifiedname>
        <briefdescription>
<para>Return an iterator pointing to the beginning of the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>The point underneath this iterator cannot be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="846" column="18" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="846" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a272cb092a6237a6a639bb27e4508a393" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator tracktable::Trajectory&lt; PointT &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>tracktable::Trajectory::end</qualifiedname>
        <briefdescription>
<para>Return an iterator pointing beyond the last point in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>The point underneath this iterator, if there is one, can be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="852" column="12" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="852" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a9737d62062786f4db2b1dce2e81a30bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator tracktable::Trajectory&lt; PointT &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>tracktable::Trajectory::end</qualifiedname>
        <briefdescription>
<para>Return an iterator pointing beyond the last point in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>The point underneath this iterator, if there is one, cannot be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="858" column="18" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="858" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a5c17c687b2766a3e24a93763af16630e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator tracktable::Trajectory&lt; PointT &gt;::cend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cend</name>
        <qualifiedname>tracktable::Trajectory::cend</qualifiedname>
        <briefdescription>
<para>Return an iterator pointing beyond the last point in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>The point underneath this iterator, if there is one, cannot be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="864" column="18" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="864" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a37f9f846b049ec45f2c8be32bcfea9cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reverse_iterator</type>
        <definition>reverse_iterator tracktable::Trajectory&lt; PointT &gt;::rbegin</definition>
        <argsstring>()</argsstring>
        <name>rbegin</name>
        <qualifiedname>tracktable::Trajectory::rbegin</qualifiedname>
        <briefdescription>
<para>Return a reverse_iterator pointing to the end of the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>The point underneath this iterator can be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="870" column="20" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="870" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1ab5e2899a4dc182cd71c598ff4648df4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator tracktable::Trajectory&lt; PointT &gt;::rbegin</definition>
        <argsstring>() const</argsstring>
        <name>rbegin</name>
        <qualifiedname>tracktable::Trajectory::rbegin</qualifiedname>
        <briefdescription>
<para>Return a reverse_iterator pointing to the end of the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>The point underneath this iterator cannot be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="876" column="26" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="876" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1ac1977a39c952c3ed234f19354e67423c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator tracktable::Trajectory&lt; PointT &gt;::crbegin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>crbegin</name>
        <qualifiedname>tracktable::Trajectory::crbegin</qualifiedname>
        <briefdescription>
<para>Return a reverse_iterator pointing to the end of the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>The point underneath this iterator cannot be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="882" column="26" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="882" bodyend="882"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a8364467dad32d7920df980a9fc43ba75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reverse_iterator</type>
        <definition>reverse_iterator tracktable::Trajectory&lt; PointT &gt;::rend</definition>
        <argsstring>()</argsstring>
        <name>rend</name>
        <qualifiedname>tracktable::Trajectory::rend</qualifiedname>
        <briefdescription>
<para>Return an iterator pointing beyond the first point in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>The point underneath this iterator, if there is one, can be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="888" column="20" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="888" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a7d69b49a3e1b4564522e53fc8d873e83" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator tracktable::Trajectory&lt; PointT &gt;::rend</definition>
        <argsstring>() const</argsstring>
        <name>rend</name>
        <qualifiedname>tracktable::Trajectory::rend</qualifiedname>
        <briefdescription>
<para>Return an iterator pointing beyond the last point in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>The point underneath this iterator, if there is one, cannot be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="894" column="26" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="894" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1ab325a986344d021314d91d13fde1873e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator tracktable::Trajectory&lt; PointT &gt;::crend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>crend</name>
        <qualifiedname>tracktable::Trajectory::crend</qualifiedname>
        <briefdescription>
<para>Return an iterator pointing beyond the last point in the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>The point underneath this iterator, if there is one, cannot be changed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="900" column="26" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="900" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a20c27d068f1a8ff6e2478e07a7a83a25" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::serialize</definition>
        <argsstring>(Archive &amp;ar, const unsigned int)</argsstring>
        <name>serialize</name>
        <qualifiedname>tracktable::Trajectory::serialize</qualifiedname>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const unsigned int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="822" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="822" bodyend="826"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Methods related to properties</header>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1abe36bfa081b2a4c7ce0d269026e84548" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::set_property</definition>
        <argsstring>(std::string const &amp;name, PropertyValueT const &amp;value)</argsstring>
        <name>set_property</name>
        <qualifiedname>tracktable::Trajectory::set_property</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>PropertyValueT const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set a named property with a variant value (let the caller handle the type) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="317" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a2564230d0eef53b3718b3c21fd740417" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PropertyValueT</type>
        <definition>PropertyValueT tracktable::Trajectory&lt; PointT &gt;::property</definition>
        <argsstring>(std::string const &amp;name, bool *ok=0) const</argsstring>
        <name>property</name>
        <qualifiedname>tracktable::Trajectory::property</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Retrieve a named property with checking. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="327" column="18" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="327" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a939785a4ca2762caadacb3599f17521c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PropertyValueT</type>
        <definition>PropertyValueT tracktable::Trajectory&lt; PointT &gt;::property_without_checking</definition>
        <argsstring>(std::string const &amp;name) const</argsstring>
        <name>property_without_checking</name>
        <qualifiedname>tracktable::Trajectory::property_without_checking</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Retrieve a named property without safety checking. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="339" column="18" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="339" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1ace0d5d108ad9c23448aaf45650f3aca4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string tracktable::Trajectory&lt; PointT &gt;::string_property</definition>
        <argsstring>(std::string const &amp;name, bool *ok=0) const</argsstring>
        <name>string_property</name>
        <qualifiedname>tracktable::Trajectory::string_property</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Safely retrieve a named property with a string value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="350" column="15" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a419e778d8ca7edc1c6527064a4748e1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tracktable::Trajectory&lt; PointT &gt;::real_property</definition>
        <argsstring>(std::string const &amp;name, bool *ok=0) const</argsstring>
        <name>real_property</name>
        <qualifiedname>tracktable::Trajectory::real_property</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Safely retrieve a named property with a floating-point value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="360" column="10" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="360" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a792da0d196cd48722b3c8beacf3fdc95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetracktable_1a682e5fb98918f65770834e07ff51d21c" kindref="member">Timestamp</ref></type>
        <definition>Timestamp tracktable::Trajectory&lt; PointT &gt;::timestamp_property</definition>
        <argsstring>(std::string const &amp;name, bool *ok=0) const</argsstring>
        <name>timestamp_property</name>
        <qualifiedname>tracktable::Trajectory::timestamp_property</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>ok</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Safely retrieve a named property with a timestamp value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="370" column="13" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1ad0d641889c42340be22ac62f32300eaa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tracktable::Trajectory&lt; PointT &gt;::has_property</definition>
        <argsstring>(std::string const &amp;name) const</argsstring>
        <name>has_property</name>
        <qualifiedname>tracktable::Trajectory::has_property</qualifiedname>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Check whether a property is present. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="379" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="379" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1ac9a9434a75ac7499d19f8d0c53251e75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetracktable_1a1025d06e8ca7ebb7e66de16aa92fdc12" kindref="member">PropertyMap</ref> const &amp;</type>
        <definition>PropertyMap const  &amp; tracktable::Trajectory&lt; PointT &gt;::__properties</definition>
        <argsstring>() const</argsstring>
        <name>__properties</name>
        <qualifiedname>tracktable::Trajectory::__properties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="389" column="21" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="389" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a4d1171ba9c693f94a176d802db4d0e14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetracktable_1a1025d06e8ca7ebb7e66de16aa92fdc12" kindref="member">PropertyMap</ref> &amp;</type>
        <definition>PropertyMap &amp; tracktable::Trajectory&lt; PointT &gt;::__non_const_properties</definition>
        <argsstring>()</argsstring>
        <name>__non_const_properties</name>
        <qualifiedname>tracktable::Trajectory::__non_const_properties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="390" column="15" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="390" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a12ef65e8d611c20d8695a05f2eee24a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::__set_properties</definition>
        <argsstring>(PropertyMap const &amp;props)</argsstring>
        <name>__set_properties</name>
        <qualifiedname>tracktable::Trajectory::__set_properties</qualifiedname>
        <param>
          <type><ref refid="namespacetracktable_1a1025d06e8ca7ebb7e66de16aa92fdc12" kindref="member">PropertyMap</ref> const &amp;</type>
          <declname>props</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="397" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="397" bodyend="397"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" prot="public" static="no">
        <type>PointT</type>
        <definition>typedef PointT tracktable::Trajectory&lt; PointT &gt;::point_type</definition>
        <argsstring></argsstring>
        <name>point_type</name>
        <qualifiedname>tracktable::Trajectory::point_type</qualifiedname>
        <briefdescription>
<para>Convenient aliases for template parameters and types from internal storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="96" column="18" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_trajectory_1a73fa08b29cadca24af236594956f3ea0" prot="public" static="no">
        <type>std::vector&lt; PointT &gt;</type>
        <definition>typedef std::vector&lt;PointT&gt; tracktable::Trajectory&lt; PointT &gt;::point_vector_type</definition>
        <argsstring></argsstring>
        <name>point_vector_type</name>
        <qualifiedname>tracktable::Trajectory::point_vector_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="97" column="23" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_trajectory_1a07f06b436de231da58fb8f2735823b88" prot="public" static="no">
        <type>point_vector_type::iterator</type>
        <definition>typedef point_vector_type::iterator tracktable::Trajectory&lt; PointT &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>tracktable::Trajectory::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="98" column="48" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_trajectory_1aa2d5a106b7a5b6fe29bc4a3d779b6f7e" prot="public" static="no">
        <type>point_vector_type::const_iterator</type>
        <definition>typedef point_vector_type::const_iterator tracktable::Trajectory&lt; PointT &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>tracktable::Trajectory::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="99" column="54" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_trajectory_1a14c161101e15b2f44a50aad4d28c1488" prot="public" static="no">
        <type>point_vector_type::reverse_iterator</type>
        <definition>typedef point_vector_type::reverse_iterator tracktable::Trajectory&lt; PointT &gt;::reverse_iterator</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <qualifiedname>tracktable::Trajectory::reverse_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="100" column="56" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_trajectory_1a01bad1da87b5cccd2dd3f43808731246" prot="public" static="no">
        <type>point_vector_type::const_reverse_iterator</type>
        <definition>typedef point_vector_type::const_reverse_iterator tracktable::Trajectory&lt; PointT &gt;::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <qualifiedname>tracktable::Trajectory::const_reverse_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="101" column="62" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_trajectory_1a8ed037c7bf1b9ffae63619500e0796ad" prot="public" static="no">
        <type>point_vector_type::size_type</type>
        <definition>typedef point_vector_type::size_type tracktable::Trajectory&lt; PointT &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>tracktable::Trajectory::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="102" column="49" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_trajectory_1aab89b32a0791cd66fdc03627b9ddb498" prot="public" static="no">
        <type>point_vector_type::value_type</type>
        <definition>typedef point_vector_type::value_type tracktable::Trajectory&lt; PointT &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>tracktable::Trajectory::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="103" column="50" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_trajectory_1a5f2ee54e1262fed48b1277bb5e69510b" prot="public" static="no">
        <type>point_vector_type::difference_type</type>
        <definition>typedef point_vector_type::difference_type tracktable::Trajectory&lt; PointT &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <qualifiedname>tracktable::Trajectory::difference_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="104" column="55" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_trajectory_1aa5a56f6eb44650fe023f9669a6b5fda1" prot="public" static="no">
        <type>point_vector_type::reference</type>
        <definition>typedef point_vector_type::reference tracktable::Trajectory&lt; PointT &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>tracktable::Trajectory::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="105" column="49" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_trajectory_1a352ebc5675bb16dce33ecef4041c8417" prot="public" static="no">
        <type>point_vector_type::const_reference</type>
        <definition>typedef point_vector_type::const_reference tracktable::Trajectory&lt; PointT &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <qualifiedname>tracktable::Trajectory::const_reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="106" column="55" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="106" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a50cb43be3a885825823ca6e8785e1378" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::Trajectory&lt; PointT &gt;::Trajectory</definition>
        <argsstring>(bool generate_uuid=true)</argsstring>
        <name>Trajectory</name>
        <qualifiedname>tracktable::Trajectory::Trajectory</qualifiedname>
        <param>
          <type>bool</type>
          <declname>generate_uuid</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Instantiate an empty trajectory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="111" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a7e99d2d73f4982070b518cbe70704dff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::Trajectory&lt; PointT &gt;::~Trajectory</definition>
        <argsstring>()</argsstring>
        <name>~Trajectory</name>
        <qualifiedname>tracktable::Trajectory::~Trajectory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="116" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1ac8f5760f0bc365e09c09d3eadb3beea4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::Trajectory&lt; PointT &gt;::Trajectory</definition>
        <argsstring>(const Trajectory &amp;other)</argsstring>
        <name>Trajectory</name>
        <qualifiedname>tracktable::Trajectory::Trajectory</qualifiedname>
        <param>
          <type>const <ref refid="classtracktable_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create a trajectory a copy of another. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="120" column="1" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="120" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1aad93ebf2d800f63bf94fc9776677a48d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::Trajectory&lt; PointT &gt;::Trajectory</definition>
        <argsstring>(size_type n, point_type initial_value=point_type(), bool generate_uuid=true)</argsstring>
        <name>Trajectory</name>
        <qualifiedname>tracktable::Trajectory::Trajectory</qualifiedname>
        <param>
          <type>size_type</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref></type>
          <declname>initial_value</declname>
          <defval><ref refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" kindref="member">point_type</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>generate_uuid</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Create a new trajectory with pre-specified length. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a new trajectory with n elements. You may also supply a point that will be copied into each element.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initial_value</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to be used to fill the new vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">generate_uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to generate a UUID for the trajectory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="137" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="137" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a3d90961ebefbf370d6bfd359af704928" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>tracktable::Trajectory&lt; PointT &gt;::Trajectory</definition>
        <argsstring>(InputIterator first, InputIterator last, bool generate_uuid=true)</argsstring>
        <name>Trajectory</name>
        <qualifiedname>tracktable::Trajectory::Trajectory</qualifiedname>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>last</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>generate_uuid</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Create a new trajectory from a range of points. </para>
        </briefdescription>
        <detaileddescription>
<para>Create a new trajectory by copying points from [first, last).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">first</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the first point for the new trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">last</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing past the last point for the new trajectory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">generate_uuid</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to generate a UUID for the trajectory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="154" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="154" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a8cacf65b606e48c326f8032f94c6b775" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>tracktable::Trajectory&lt; PointT &gt;::Trajectory</definition>
        <argsstring>(InputIterator first, InputIterator last, const Trajectory &amp;original)</argsstring>
        <name>Trajectory</name>
        <qualifiedname>tracktable::Trajectory::Trajectory</qualifiedname>
        <param>
          <type>InputIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>last</declname>
        </param>
        <param>
          <type>const <ref refid="classtracktable_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>original</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="164" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="164" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a60f8897f65414fd4384d2fdd9b9ea8e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
        <definition>Trajectory &amp; tracktable::Trajectory&lt; PointT &gt;::operator=</definition>
        <argsstring>(const Trajectory &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>tracktable::Trajectory::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classtracktable_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Make this trajectory a copy of another. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="174" column="14" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1ab84c3cdff0cf6aee5bbfe8fe5802bcae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_trajectory" kindref="compound">Trajectory</ref> &amp;</type>
        <definition>Trajectory &amp; tracktable::Trajectory&lt; PointT &gt;::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <qualifiedname>tracktable::Trajectory::clone</qualifiedname>
        <briefdescription>
<para>Make this trajectory a clone of another. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="183" column="14" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1af57579863e004d634ec4f8ac730c32a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetracktable_1a682e5fb98918f65770834e07ff51d21c" kindref="member">Timestamp</ref></type>
        <definition>Timestamp tracktable::Trajectory&lt; PointT &gt;::start_time</definition>
        <argsstring>() const</argsstring>
        <name>start_time</name>
        <qualifiedname>tracktable::Trajectory::start_time</qualifiedname>
        <briefdescription>
<para>Return the start time if available. </para>
        </briefdescription>
        <detaileddescription>
<para>If there are any points in the trajectory this method will return the timestamp on the first point. If not, it will return an invalid <ref refid="namespacetracktable_1a682e5fb98918f65770834e07ff51d21c" kindref="member">Timestamp</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="194" column="13" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="194" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a08e6282c3ddeef676944d325d67c9b15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetracktable_1a682e5fb98918f65770834e07ff51d21c" kindref="member">Timestamp</ref></type>
        <definition>Timestamp tracktable::Trajectory&lt; PointT &gt;::end_time</definition>
        <argsstring>() const</argsstring>
        <name>end_time</name>
        <qualifiedname>tracktable::Trajectory::end_time</qualifiedname>
        <briefdescription>
<para>Return the end time if available. </para>
        </briefdescription>
        <detaileddescription>
<para>If there are any points in the trajectory this method will return the timestamp on the last point. If not, it will return an invalid <ref refid="namespacetracktable_1a682e5fb98918f65770834e07ff51d21c" kindref="member">Timestamp</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="212" column="13" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="212" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1afcc4248cc99101b40fc741835b5bb0ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Duration</type>
        <definition>Duration tracktable::Trajectory&lt; PointT &gt;::duration</definition>
        <argsstring>() const</argsstring>
        <name>duration</name>
        <qualifiedname>tracktable::Trajectory::duration</qualifiedname>
        <briefdescription>
<para>Return the duration, if available. </para>
        </briefdescription>
        <detaileddescription>
<para>If there are any points in the trajectory, this method will return the duration of the trajectory. If not it will return a duration of 0.</para>
<para><simplesect kind="return"><para>the difference of end_time and start_time or 0 if no points. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="231" column="12" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="231" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1accf9738423068531d0d112b6e5d5be2b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacetracktable_1a1b220fef4a0f524b45d526c61a5fea6a" kindref="member">uuid_type</ref> &amp;</type>
        <definition>const uuid_type &amp; tracktable::Trajectory&lt; PointT &gt;::uuid</definition>
        <argsstring>() const</argsstring>
        <name>uuid</name>
        <qualifiedname>tracktable::Trajectory::uuid</qualifiedname>
        <briefdescription>
<para>Return the UUID (RFC 4122 or variant) of the trajectory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="246" column="19" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a1e23aa8cd61b5c62117b1cda4adcc31c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::set_uuid</definition>
        <argsstring>(const uuid_type &amp;new_uuid)</argsstring>
        <name>set_uuid</name>
        <qualifiedname>tracktable::Trajectory::set_uuid</qualifiedname>
        <param>
          <type>const <ref refid="namespacetracktable_1a1b220fef4a0f524b45d526c61a5fea6a" kindref="member">uuid_type</ref> &amp;</type>
          <declname>new_uuid</declname>
        </param>
        <briefdescription>
<para>Set the UUID of the trajectory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="252" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a2a1a461d43fdf0b0585334df25edb3a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::Trajectory&lt; PointT &gt;::set_uuid</definition>
        <argsstring>()</argsstring>
        <name>set_uuid</name>
        <qualifiedname>tracktable::Trajectory::set_uuid</qualifiedname>
        <briefdescription>
<para>Set the UUID of the trajectory to a random UUID using the systemwide generator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="258" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="258" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1aff9cf81befecb8320230800cb46e3daf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string tracktable::Trajectory&lt; PointT &gt;::object_id</definition>
        <argsstring>() const</argsstring>
        <name>object_id</name>
        <qualifiedname>tracktable::Trajectory::object_id</qualifiedname>
        <briefdescription>
<para>Return the ID of the moving object. </para>
        </briefdescription>
        <detaileddescription>
<para>If there are any points in the trajectory, return the object ID of the first one. Otherwise return the string &quot;(empty)&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="269" column="15" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="269" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_trajectory_1a56bf2815b7cd0bc1fab46e5fac015000" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string tracktable::Trajectory&lt; PointT &gt;::trajectory_id</definition>
        <argsstring>() const</argsstring>
        <name>trajectory_id</name>
        <qualifiedname>tracktable::Trajectory::trajectory_id</qualifiedname>
        <briefdescription>
<para>Return a human-readable ID for the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para>Return a mostly-unique ID for the trajectory incorporating its object ID, start time and end time. If the trajectory is empty then we return the string &quot;(empty)&quot;.</para>
<para>Note that if you have multiple trajectories with the same object ID, start time and end time, this identifier will not be unique. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="291" column="15" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="291" bodyend="306"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Ordered sequence of points. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is the heart of most of what Tracktable does. It implements an ordered sequence of <ref refid="classtracktable_1_1_trajectory_point" kindref="compound">TrajectoryPoint</ref> objects, each of which has an ID, coordinates and a timestamp. Those compose a trajectory.</para>
<para>We provide accessors so that you can treat a <ref refid="classtracktable_1_1_trajectory" kindref="compound">Trajectory</ref> as if it were a std::vector. </para>
    </detaileddescription>
    <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" line="86" column="1" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/Trajectory.h" bodystart="87" bodyend="902"/>
    <listofallmembers>
      <member refid="classtracktable_1_1_trajectory_1a4d1171ba9c693f94a176d802db4d0e14" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>__non_const_properties</name></member>
      <member refid="classtracktable_1_1_trajectory_1ac9a9434a75ac7499d19f8d0c53251e75" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>__properties</name></member>
      <member refid="classtracktable_1_1_trajectory_1a12ef65e8d611c20d8695a05f2eee24a1" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>__set_properties</name></member>
      <member refid="classtracktable_1_1_trajectory_1ad78c438f70565341f3b2667230f9d331" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>at</name></member>
      <member refid="classtracktable_1_1_trajectory_1a1f6546dd74e8fa0464bfa1238690b8db" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>at</name></member>
      <member refid="classtracktable_1_1_trajectory_1a5a89075c7122aea5f48b60b5b2d6270c" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>back</name></member>
      <member refid="classtracktable_1_1_trajectory_1af069ff91341a497850f8abca7a6127a3" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>back</name></member>
      <member refid="classtracktable_1_1_trajectory_1a9fe4d5edf449f7675d5cf9e187f3f581" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>begin</name></member>
      <member refid="classtracktable_1_1_trajectory_1ac16a3959f6a4fe5165a62c75cba7fa97" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>begin</name></member>
      <member refid="classtracktable_1_1_trajectory_1a0db842f3b69bb7bc31f0dbfe14b0db51" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>capacity</name></member>
      <member refid="classtracktable_1_1_trajectory_1aa9fe5930da929365d69ae129a18cfee3" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>cbegin</name></member>
      <member refid="classtracktable_1_1_trajectory_1a5c17c687b2766a3e24a93763af16630e" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>cend</name></member>
      <member refid="classtracktable_1_1_trajectory_1a9166d1bda8d4791f68bc49e3cdd6a17e" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>clear</name></member>
      <member refid="classtracktable_1_1_trajectory_1ab84c3cdff0cf6aee5bbfe8fe5802bcae" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>clone</name></member>
      <member refid="classtracktable_1_1_trajectory_1a9081b15769ca2fe1599c2d70fb8f45f2" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>compute_current_features</name></member>
      <member refid="classtracktable_1_1_trajectory_1aa2d5a106b7a5b6fe29bc4a3d779b6f7e" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>const_iterator</name></member>
      <member refid="classtracktable_1_1_trajectory_1a352ebc5675bb16dce33ecef4041c8417" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>const_reference</name></member>
      <member refid="classtracktable_1_1_trajectory_1a01bad1da87b5cccd2dd3f43808731246" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>const_reverse_iterator</name></member>
      <member refid="classtracktable_1_1_trajectory_1ac1977a39c952c3ed234f19354e67423c" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>crbegin</name></member>
      <member refid="classtracktable_1_1_trajectory_1ab325a986344d021314d91d13fde1873e" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>crend</name></member>
      <member refid="classtracktable_1_1_trajectory_1a5f2ee54e1262fed48b1277bb5e69510b" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>difference_type</name></member>
      <member refid="classtracktable_1_1_trajectory_1afcc4248cc99101b40fc741835b5bb0ae" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>duration</name></member>
      <member refid="classtracktable_1_1_trajectory_1a00e26c610525256edc1901bccf8ede3c" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>empty</name></member>
      <member refid="classtracktable_1_1_trajectory_1a272cb092a6237a6a639bb27e4508a393" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>end</name></member>
      <member refid="classtracktable_1_1_trajectory_1a9737d62062786f4db2b1dce2e81a30bc" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>end</name></member>
      <member refid="classtracktable_1_1_trajectory_1a08e6282c3ddeef676944d325d67c9b15" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>end_time</name></member>
      <member refid="classtracktable_1_1_trajectory_1a3cc235f0bbb2205f0d5a2b3d6e4a6d23" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>erase</name></member>
      <member refid="classtracktable_1_1_trajectory_1a66fa66bb0fe57ef60d06ae2a73eddbf2" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>erase</name></member>
      <member refid="classtracktable_1_1_trajectory_1ac54fa8e8176246a99095e9a468a889f5" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>front</name></member>
      <member refid="classtracktable_1_1_trajectory_1a13ed8aec90926f87f30ad83f64f18385" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>front</name></member>
      <member refid="classtracktable_1_1_trajectory_1ad0d641889c42340be22ac62f32300eaa" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>has_property</name></member>
      <member refid="classtracktable_1_1_trajectory_1aab2cf5b98b136dd6823a258c54ffb5ad" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>insert</name></member>
      <member refid="classtracktable_1_1_trajectory_1aaeb6b042b0d9eab09cee25be46af4bac" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>insert</name></member>
      <member refid="classtracktable_1_1_trajectory_1a0dc27fdb26050a75ceba18932f32c46b" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>insert</name></member>
      <member refid="classtracktable_1_1_trajectory_1ad1593fae980c55b29a9ecf11aeb0e31f" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>insert</name></member>
      <member refid="classtracktable_1_1_trajectory_1a07f06b436de231da58fb8f2735823b88" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>iterator</name></member>
      <member refid="classtracktable_1_1_trajectory_1a2e8d6eaa3fda858c43bcfadeaf1e9386" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>max_size</name></member>
      <member refid="classtracktable_1_1_trajectory_1aff9cf81befecb8320230800cb46e3daf" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>object_id</name></member>
      <member refid="classtracktable_1_1_trajectory_1a826bac1333e2207e1a9c5323abc206d2" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>operator!=</name></member>
      <member refid="classtracktable_1_1_trajectory_1a60f8897f65414fd4384d2fdd9b9ea8e1" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>operator=</name></member>
      <member refid="classtracktable_1_1_trajectory_1aac6c72fc0d8cc08368827c951e871462" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>operator==</name></member>
      <member refid="classtracktable_1_1_trajectory_1a34023182a6215ab2b3097263c37fdbb6" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>operator[]</name></member>
      <member refid="classtracktable_1_1_trajectory_1a551d6da43c7b35f7d58c4d2429cbd7d5" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>operator[]</name></member>
      <member refid="classtracktable_1_1_trajectory_1a8d3edcdda8ce1ad416c7daa81b016320" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>point_type</name></member>
      <member refid="classtracktable_1_1_trajectory_1a73fa08b29cadca24af236594956f3ea0" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>point_vector_type</name></member>
      <member refid="classtracktable_1_1_trajectory_1a52860f598486d0d654f9bd969059f707" prot="protected" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>Points</name></member>
      <member refid="classtracktable_1_1_trajectory_1aadcc6f6b16f9a7de58a064b4450ec95c" prot="protected" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>Properties</name></member>
      <member refid="classtracktable_1_1_trajectory_1a2564230d0eef53b3718b3c21fd740417" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>property</name></member>
      <member refid="classtracktable_1_1_trajectory_1a939785a4ca2762caadacb3599f17521c" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>property_without_checking</name></member>
      <member refid="classtracktable_1_1_trajectory_1a6365f4c2d2450fe0b2a00a828b6365bc" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>push_back</name></member>
      <member refid="classtracktable_1_1_trajectory_1a37f9f846b049ec45f2c8be32bcfea9cb" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>rbegin</name></member>
      <member refid="classtracktable_1_1_trajectory_1ab5e2899a4dc182cd71c598ff4648df4e" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>rbegin</name></member>
      <member refid="classtracktable_1_1_trajectory_1a419e778d8ca7edc1c6527064a4748e1c" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>real_property</name></member>
      <member refid="classtracktable_1_1_trajectory_1aa5a56f6eb44650fe023f9669a6b5fda1" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>reference</name></member>
      <member refid="classtracktable_1_1_trajectory_1a8364467dad32d7920df980a9fc43ba75" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>rend</name></member>
      <member refid="classtracktable_1_1_trajectory_1a7d69b49a3e1b4564522e53fc8d873e83" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>rend</name></member>
      <member refid="classtracktable_1_1_trajectory_1a474e8824c8f8dd9d0fc1b87bf3fd6e66" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>reserve</name></member>
      <member refid="classtracktable_1_1_trajectory_1afca0d56029e01e620feaf8df4c6ce9bb" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>resize</name></member>
      <member refid="classtracktable_1_1_trajectory_1a14c161101e15b2f44a50aad4d28c1488" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>reverse_iterator</name></member>
      <member refid="classtracktable_1_1_trajectory_1a20c27d068f1a8ff6e2478e07a7a83a25" prot="private" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>serialize</name></member>
      <member refid="classtracktable_1_1_trajectory_1abe36bfa081b2a4c7ce0d269026e84548" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>set_property</name></member>
      <member refid="classtracktable_1_1_trajectory_1a1e23aa8cd61b5c62117b1cda4adcc31c" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>set_uuid</name></member>
      <member refid="classtracktable_1_1_trajectory_1a2a1a461d43fdf0b0585334df25edb3a5" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>set_uuid</name></member>
      <member refid="classtracktable_1_1_trajectory_1a2e76b8bad09400b1462ee9135e1ae19a" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>size</name></member>
      <member refid="classtracktable_1_1_trajectory_1a8ed037c7bf1b9ffae63619500e0796ad" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>size_type</name></member>
      <member refid="classtracktable_1_1_trajectory_1af57579863e004d634ec4f8ac730c32a6" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>start_time</name></member>
      <member refid="classtracktable_1_1_trajectory_1ace0d5d108ad9c23448aaf45650f3aca4" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>string_property</name></member>
      <member refid="classtracktable_1_1_trajectory_1a792da0d196cd48722b3c8beacf3fdc95" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>timestamp_property</name></member>
      <member refid="classtracktable_1_1_trajectory_1a50cb43be3a885825823ca6e8785e1378" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>Trajectory</name></member>
      <member refid="classtracktable_1_1_trajectory_1ac8f5760f0bc365e09c09d3eadb3beea4" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>Trajectory</name></member>
      <member refid="classtracktable_1_1_trajectory_1aad93ebf2d800f63bf94fc9776677a48d" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>Trajectory</name></member>
      <member refid="classtracktable_1_1_trajectory_1a3d90961ebefbf370d6bfd359af704928" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>Trajectory</name></member>
      <member refid="classtracktable_1_1_trajectory_1a8cacf65b606e48c326f8032f94c6b775" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>Trajectory</name></member>
      <member refid="classtracktable_1_1_trajectory_1a56bf2815b7cd0bc1fab46e5fac015000" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>trajectory_id</name></member>
      <member refid="classtracktable_1_1_trajectory_1acb1c7adb5d5ee5f0ed43dd91a82bae99" prot="protected" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>UUID</name></member>
      <member refid="classtracktable_1_1_trajectory_1accf9738423068531d0d112b6e5d5be2b" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>uuid</name></member>
      <member refid="classtracktable_1_1_trajectory_1aab89b32a0791cd66fdc03627b9ddb498" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>value_type</name></member>
      <member refid="classtracktable_1_1_trajectory_1a7e99d2d73f4982070b518cbe70704dff" prot="public" virt="non-virtual"><scope>tracktable::Trajectory</scope><name>~Trajectory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
