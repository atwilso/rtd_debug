<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classtracktable_1_1_line_reader" kind="class" language="C++" prot="public">
    <compoundname>tracktable::LineReader</compoundname>
    <includes refid="_line_reader_8h" local="no">LineReader.h</includes>
    <innerclass refid="classtracktable_1_1_line_reader_1_1_line_reader_iterator" prot="protected">tracktable::LineReader::LineReaderIterator</innerclass>
    <templateparamlist>
      <param>
        <type>class StringT</type>
        <defval>std::string</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtracktable_1_1_line_reader_1a7f9c5074aca9091f10cefe83210a44cd" prot="public" static="no">
        <type>StringT</type>
        <definition>typedef StringT tracktable::LineReader&lt; StringT &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>tracktable::LineReader::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="62" column="54" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_line_reader_1a42b003709de7342ec8b30c49ae556a9c" prot="public" static="no">
        <type>StringT::value_type</type>
        <definition>typedef StringT::value_type tracktable::LineReader&lt; StringT &gt;::char_type</definition>
        <argsstring></argsstring>
        <name>char_type</name>
        <qualifiedname>tracktable::LineReader::char_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="63" column="54" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_line_reader_1a43ade5f45a261f5fb167717cfa989442" prot="public" static="no">
        <type>StringT::traits_type</type>
        <definition>typedef StringT::traits_type tracktable::LineReader&lt; StringT &gt;::traits_type</definition>
        <argsstring></argsstring>
        <name>traits_type</name>
        <qualifiedname>tracktable::LineReader::traits_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="64" column="54" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_line_reader_1a58d9e975a6671e3d6de3a6331d532a47" prot="public" static="no">
        <type>std::basic_istream&lt; char_type, traits_type &gt;</type>
        <definition>typedef std::basic_istream&lt;char_type, traits_type&gt; tracktable::LineReader&lt; StringT &gt;::istream_type</definition>
        <argsstring></argsstring>
        <name>istream_type</name>
        <qualifiedname>tracktable::LineReader::istream_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="65" column="30" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_line_reader_1a71dd318791ecd65dc2c1450209c3fcd1" prot="public" static="no">
        <type><ref refid="classtracktable_1_1_line_reader_1_1_line_reader_iterator" kindref="compound">LineReaderIterator</ref></type>
        <definition>typedef LineReaderIterator tracktable::LineReader&lt; StringT &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>tracktable::LineReader::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="307" column="30" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_line_reader_1aeacd1bc5b884b23504c4dac61a624c37" prot="public" static="no">
        <type><ref refid="classtracktable_1_1_line_reader_1_1_line_reader_iterator" kindref="compound">LineReaderIterator</ref> const</type>
        <definition>typedef LineReaderIterator const tracktable::LineReader&lt; StringT &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>tracktable::LineReader::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="308" column="36" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="308" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtracktable_1_1_line_reader_1a869ca93f891cc2a1a3046417302480d6" prot="private" static="no" mutable="no">
        <type>istream_type *</type>
        <definition>istream_type* tracktable::LineReader&lt; StringT &gt;::Stream</definition>
        <argsstring></argsstring>
        <name>Stream</name>
        <qualifiedname>tracktable::LineReader::Stream</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="148" column="16" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="148" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1a85d80a4d2cc62f8d570296405bf6f2f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::LineReader&lt; StringT &gt;::LineReader</definition>
        <argsstring>()</argsstring>
        <name>LineReader</name>
        <qualifiedname>tracktable::LineReader::LineReader</qualifiedname>
        <briefdescription>
<para>Instantiate an empty line reader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="68" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1abc3e9448b03742248648e1a1dbdd5e7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::LineReader&lt; StringT &gt;::LineReader</definition>
        <argsstring>(const LineReader &amp;other)</argsstring>
        <name>LineReader</name>
        <qualifiedname>tracktable::LineReader::LineReader</qualifiedname>
        <param>
          <type>const <ref refid="classtracktable_1_1_line_reader" kindref="compound">LineReader</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy contructor, create a reader with a copy of another. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para>Line reader to copy from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="77" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1a4df8829abf12b3e820ddda9b14f59d91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::LineReader&lt; StringT &gt;::LineReader</definition>
        <argsstring>(istream_type &amp;stream)</argsstring>
        <name>LineReader</name>
        <qualifiedname>tracktable::LineReader::LineReader</qualifiedname>
        <param>
          <type>istream_type &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Instantiate a line reader with <computeroutput>std::basic_istream</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream to read lines in </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="86" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1a3d882cd7fd4e4d34507b64e0d5796616" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tracktable::LineReader&lt; StringT &gt;::~LineReader</definition>
        <argsstring>()</argsstring>
        <name>~LineReader</name>
        <qualifiedname>tracktable::LineReader::~LineReader</qualifiedname>
        <briefdescription>
<para>Destructor for a line reader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="92" column="11" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1aa5d96a31e82f861e85e266b1b54eac1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_line_reader" kindref="compound">LineReader</ref> &amp;</type>
        <definition>LineReader &amp; tracktable::LineReader&lt; StringT &gt;::operator=</definition>
        <argsstring>(LineReader const &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>tracktable::LineReader::operator=</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1_line_reader" kindref="compound">LineReader</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Assign a <ref refid="classtracktable_1_1_line_reader" kindref="compound">LineReader</ref> to the value of another. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtracktable_1_1_line_reader" kindref="compound">LineReader</ref> to assign value of </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Stream with the new assigned value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="101" column="14" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1a01b85b8e2fd013c85c5025fcbc7e4660" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::LineReader&lt; StringT &gt;::set_input</definition>
        <argsstring>(istream_type &amp;stream)</argsstring>
        <name>set_input</name>
        <qualifiedname>tracktable::LineReader::set_input</qualifiedname>
        <param>
          <type>istream_type &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Set the input for the <ref refid="classtracktable_1_1_line_reader" kindref="compound">LineReader</ref> stream to that of the given istream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The input to use for input </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="111" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1ab250353a3f72a64e1e4e82c7c08c067b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>istream_type &amp;</type>
        <definition>istream_type &amp; tracktable::LineReader&lt; StringT &gt;::input</definition>
        <argsstring>() const</argsstring>
        <name>input</name>
        <qualifiedname>tracktable::LineReader::input</qualifiedname>
        <briefdescription>
<para>Get the input value of the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The stream input value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="120" column="16" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1a2a8fcd718bf00ae47991986cae4d2500" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tracktable::LineReader&lt; StringT &gt;::operator==</definition>
        <argsstring>(LineReader const &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>tracktable::LineReader::operator==</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1_line_reader" kindref="compound">LineReader</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Check whether one stream is equal to another by comparing all the items. </para>
        </briefdescription>
        <detaileddescription>
<para>Two reader are equal if all of their streams are equal.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtracktable_1_1_line_reader" kindref="compound">LineReader</ref> for comparison </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating equivalency </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="132" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1ae454926123ed8f3532d9dad6e9094c8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tracktable::LineReader&lt; StringT &gt;::operator!=</definition>
        <argsstring>(LineReader const &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>tracktable::LineReader::operator!=</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1_line_reader" kindref="compound">LineReader</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Check whether two LineReaders are unequal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtracktable_1_1_line_reader" kindref="compound">LineReader</ref> for comparison </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating equivalency </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="142" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1a864257d94318e0daed77b7ebb8176780" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_line_reader_1_1_line_reader_iterator" kindref="compound">iterator</ref></type>
        <definition>iterator tracktable::LineReader&lt; StringT &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>tracktable::LineReader::begin</qualifiedname>
        <briefdescription>
<para>Get an iterator pointing to the beginning of the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator pointing to current stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="314" column="12" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1acb58f65460586189ffd5c15410b0b0f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_line_reader_1_1_line_reader_iterator" kindref="compound">iterator</ref></type>
        <definition>iterator tracktable::LineReader&lt; StringT &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>tracktable::LineReader::end</qualifiedname>
        <briefdescription>
<para>Get an iterator pointing to the end of the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator pointing to end of current stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="323" column="12" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1a22f89a5e9204f7ce53b2c80204aaad24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator tracktable::LineReader&lt; StringT &gt;::const_begin</definition>
        <argsstring>() const</argsstring>
        <name>const_begin</name>
        <qualifiedname>tracktable::LineReader::const_begin</qualifiedname>
        <briefdescription>
<para>Get an iterator pointing to the beginning of the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator pointing to current stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="332" column="18" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_line_reader_1a00fdb38627ee428238030cbf3ce08977" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator tracktable::LineReader&lt; StringT &gt;::const_end</definition>
        <argsstring>() const</argsstring>
        <name>const_end</name>
        <qualifiedname>tracktable::LineReader::const_end</qualifiedname>
        <briefdescription>
<para>Get an iterator pointing to the end of the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator pointing to end of current stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="341" column="18" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="341" bodyend="344"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Read data from a stream one line at a time. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is an adapter that takes a <computeroutput>std::istream</computeroutput> as input and provides an InputIterator that loops over the lines of the stream. In its current version it delegates to the <computeroutput>getline()</computeroutput> function to determine when a line has ended.</para>
<para>The behavior is meant to be the same as the Python idiom <computeroutput>for line in file</computeroutput>.</para>
<para>We do not expect you to instantiate this class directly. Instead, it shows up as part of <computeroutput><ref refid="classtracktable_1_1_point_reader" kindref="compound">PointReader</ref></computeroutput> where you put a stream in one end and get points out the other end. </para>
    </detaileddescription>
    <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" line="59" column="1" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/LineReader.h" bodystart="60" bodyend="345"/>
    <listofallmembers>
      <member refid="classtracktable_1_1_line_reader_1a864257d94318e0daed77b7ebb8176780" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>begin</name></member>
      <member refid="classtracktable_1_1_line_reader_1a42b003709de7342ec8b30c49ae556a9c" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>char_type</name></member>
      <member refid="classtracktable_1_1_line_reader_1a22f89a5e9204f7ce53b2c80204aaad24" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>const_begin</name></member>
      <member refid="classtracktable_1_1_line_reader_1a00fdb38627ee428238030cbf3ce08977" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>const_end</name></member>
      <member refid="classtracktable_1_1_line_reader_1aeacd1bc5b884b23504c4dac61a624c37" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>const_iterator</name></member>
      <member refid="classtracktable_1_1_line_reader_1acb58f65460586189ffd5c15410b0b0f0" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>end</name></member>
      <member refid="classtracktable_1_1_line_reader_1ab250353a3f72a64e1e4e82c7c08c067b" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>input</name></member>
      <member refid="classtracktable_1_1_line_reader_1a58d9e975a6671e3d6de3a6331d532a47" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>istream_type</name></member>
      <member refid="classtracktable_1_1_line_reader_1a71dd318791ecd65dc2c1450209c3fcd1" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>iterator</name></member>
      <member refid="classtracktable_1_1_line_reader_1a85d80a4d2cc62f8d570296405bf6f2f5" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>LineReader</name></member>
      <member refid="classtracktable_1_1_line_reader_1abc3e9448b03742248648e1a1dbdd5e7e" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>LineReader</name></member>
      <member refid="classtracktable_1_1_line_reader_1a4df8829abf12b3e820ddda9b14f59d91" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>LineReader</name></member>
      <member refid="classtracktable_1_1_line_reader_1ae454926123ed8f3532d9dad6e9094c8c" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>operator!=</name></member>
      <member refid="classtracktable_1_1_line_reader_1aa5d96a31e82f861e85e266b1b54eac1b" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>operator=</name></member>
      <member refid="classtracktable_1_1_line_reader_1a2a8fcd718bf00ae47991986cae4d2500" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>operator==</name></member>
      <member refid="classtracktable_1_1_line_reader_1a01b85b8e2fd013c85c5025fcbc7e4660" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>set_input</name></member>
      <member refid="classtracktable_1_1_line_reader_1a869ca93f891cc2a1a3046417302480d6" prot="private" virt="non-virtual"><scope>tracktable::LineReader</scope><name>Stream</name></member>
      <member refid="classtracktable_1_1_line_reader_1a43ade5f45a261f5fb167717cfa989442" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>traits_type</name></member>
      <member refid="classtracktable_1_1_line_reader_1a7f9c5074aca9091f10cefe83210a44cd" prot="public" virt="non-virtual"><scope>tracktable::LineReader</scope><name>value_type</name></member>
      <member refid="classtracktable_1_1_line_reader_1a3d882cd7fd4e4d34507b64e0d5796616" prot="public" virt="virtual"><scope>tracktable::LineReader</scope><name>~LineReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
