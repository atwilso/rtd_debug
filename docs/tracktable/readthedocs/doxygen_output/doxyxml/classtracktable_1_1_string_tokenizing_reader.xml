<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classtracktable_1_1_string_tokenizing_reader" kind="class" language="C++" prot="public">
    <compoundname>tracktable::StringTokenizingReader</compoundname>
    <includes refid="_string_tokenizing_reader_8h" local="no">StringTokenizingReader.h</includes>
    <innerclass refid="classtracktable_1_1_string_tokenizing_reader_1_1_tokenized_string_iterator" prot="protected">tracktable::StringTokenizingReader::TokenizedStringIterator</innerclass>
    <templateparamlist>
      <param>
        <type>typename InputLineIteratorT</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtracktable_1_1_string_tokenizing_reader_1a4c48904eb3ea6ce84379757c45f8dd64" prot="public" static="no">
        <type>InputLineIteratorT</type>
        <definition>typedef InputLineIteratorT tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::input_line_iter_type</definition>
        <argsstring></argsstring>
        <name>input_line_iter_type</name>
        <qualifiedname>tracktable::StringTokenizingReader::input_line_iter_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="61" column="51" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_string_tokenizing_reader_1ac9b02faa2f776a341492e8f61be9ff8c" prot="public" static="no">
        <type>InputLineIteratorT::value_type</type>
        <definition>typedef InputLineIteratorT::value_type tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::string_type</definition>
        <argsstring></argsstring>
        <name>string_type</name>
        <qualifiedname>tracktable::StringTokenizingReader::string_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="62" column="51" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_string_tokenizing_reader_1a7ef3eb9e91da481d2ee73868f35f6570" prot="public" static="no">
        <type><ref refid="classtracktable_1_1_string_tokenizing_reader_1_1_tokenized_string_iterator" kindref="compound">TokenizedStringIterator</ref></type>
        <definition>typedef TokenizedStringIterator tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>tracktable::StringTokenizingReader::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="430" column="35" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_string_tokenizing_reader_1a08c92ae072c4729dd3d5f4083768e3f1" prot="public" static="no">
        <type><ref refid="classtracktable_1_1_string_tokenizing_reader_1_1_tokenized_string_iterator" kindref="compound">TokenizedStringIterator</ref> const</type>
        <definition>typedef TokenizedStringIterator const tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>tracktable::StringTokenizingReader::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="431" column="41" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="431" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classtracktable_1_1_string_tokenizing_reader_1a033dd6b8e0d2221f7b733045b27bb464" prot="private" static="no">
        <type>boost::escaped_list_separator&lt; typename input_line_iter_type::value_type::value_type &gt;</type>
        <definition>typedef boost::escaped_list_separator&lt;typename input_line_iter_type::value_type::value_type&gt; tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::separator_type</definition>
        <argsstring></argsstring>
        <name>separator_type</name>
        <qualifiedname>tracktable::StringTokenizingReader::separator_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="239" column="41" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_string_tokenizing_reader_1a3b6f189167b246fe5b2755a6e0b0f02c" prot="private" static="no">
        <type>boost::tokenizer&lt; separator_type &gt;</type>
        <definition>typedef boost::tokenizer&lt;separator_type&gt; tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::tokenizer_type</definition>
        <argsstring></argsstring>
        <name>tokenizer_type</name>
        <qualifiedname>tracktable::StringTokenizingReader::tokenizer_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="240" column="28" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtracktable_1_1_string_tokenizing_reader_1afdb8f20a40d901ec7dbfa3041f727fd0" prot="private" static="no">
        <type>std::pair&lt; typename tokenizer_type::iterator, typename tokenizer_type::iterator &gt;</type>
        <definition>typedef std::pair&lt; typename tokenizer_type::iterator, typename tokenizer_type::iterator &gt; tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::token_iterator_pair</definition>
        <argsstring></argsstring>
        <name>token_iterator_pair</name>
        <qualifiedname>tracktable::StringTokenizingReader::token_iterator_pair</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="245" column="2" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="245" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtracktable_1_1_string_tokenizing_reader_1a59e27a91dc1bebe3b5f443c38c674c5a" prot="private" static="no" mutable="no">
        <type>input_line_iter_type</type>
        <definition>input_line_iter_type tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::InputLinesBegin</definition>
        <argsstring></argsstring>
        <name>InputLinesBegin</name>
        <qualifiedname>tracktable::StringTokenizingReader::InputLinesBegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="233" column="24" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtracktable_1_1_string_tokenizing_reader_1aeec6d332a322417fd6bd733e434c82db" prot="private" static="no" mutable="no">
        <type>input_line_iter_type</type>
        <definition>input_line_iter_type tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::InputLinesEnd</definition>
        <argsstring></argsstring>
        <name>InputLinesEnd</name>
        <qualifiedname>tracktable::StringTokenizingReader::InputLinesEnd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="234" column="24" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtracktable_1_1_string_tokenizing_reader_1a17c4b5ef2988adbbd0518a33fab67280" prot="private" static="no" mutable="no">
        <type>string_type</type>
        <definition>string_type tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::FieldDelimiter</definition>
        <argsstring></argsstring>
        <name>FieldDelimiter</name>
        <qualifiedname>tracktable::StringTokenizingReader::FieldDelimiter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="235" column="24" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtracktable_1_1_string_tokenizing_reader_1a8e8c9e02103f69f7a91f69a9d996a2b3" prot="private" static="no" mutable="no">
        <type>string_type</type>
        <definition>string_type tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::EscapeCharacter</definition>
        <argsstring></argsstring>
        <name>EscapeCharacter</name>
        <qualifiedname>tracktable::StringTokenizingReader::EscapeCharacter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="236" column="24" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtracktable_1_1_string_tokenizing_reader_1a362d42c52a309368de3fa4cafc135b8c" prot="private" static="no" mutable="no">
        <type>string_type</type>
        <definition>string_type tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::QuoteCharacter</definition>
        <argsstring></argsstring>
        <name>QuoteCharacter</name>
        <qualifiedname>tracktable::StringTokenizingReader::QuoteCharacter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="237" column="24" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="237" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1ae5b38bd16a6ed1c6a49a9bcf08c88dfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::StringTokenizingReader</definition>
        <argsstring>()</argsstring>
        <name>StringTokenizingReader</name>
        <qualifiedname>tracktable::StringTokenizingReader::StringTokenizingReader</qualifiedname>
        <briefdescription>
<para>Initialize an empty reader with default delimiters (space, tab). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="66" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1ac408549c6963d46731fd41918412e6da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::StringTokenizingReader</definition>
        <argsstring>(input_line_iter_type Start, input_line_iter_type Finish)</argsstring>
        <name>StringTokenizingReader</name>
        <qualifiedname>tracktable::StringTokenizingReader::StringTokenizingReader</qualifiedname>
        <param>
          <type>input_line_iter_type</type>
          <declname>Start</declname>
        </param>
        <param>
          <type>input_line_iter_type</type>
          <declname>Finish</declname>
        </param>
        <briefdescription>
<para>Initialize a tokenizer with an input range and default delimiters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="75" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="75" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a4e7ec4a2910a0d0f2c6cbc01e0e88b36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::StringTokenizingReader</definition>
        <argsstring>(input_line_iter_type Start, input_line_iter_type Finish, string_type const &amp;Delim)</argsstring>
        <name>StringTokenizingReader</name>
        <qualifiedname>tracktable::StringTokenizingReader::StringTokenizingReader</qualifiedname>
        <param>
          <type>input_line_iter_type</type>
          <declname>Start</declname>
        </param>
        <param>
          <type>input_line_iter_type</type>
          <declname>Finish</declname>
        </param>
        <param>
          <type>string_type const &amp;</type>
          <declname>Delim</declname>
        </param>
        <briefdescription>
<para>Initialize a tokenizer with an input range and your own delimiters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="86" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="86" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a3c8b8538f0742d3e12a320415e6ebe08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::StringTokenizingReader</definition>
        <argsstring>(StringTokenizingReader const &amp;other)</argsstring>
        <name>StringTokenizingReader</name>
        <qualifiedname>tracktable::StringTokenizingReader::StringTokenizingReader</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1_string_tokenizing_reader" kindref="compound">StringTokenizingReader</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy state from another tokenizer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="101" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="101" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a9d8b8490b187cee9e0497dde3161562c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::~StringTokenizingReader</definition>
        <argsstring>()</argsstring>
        <name>~StringTokenizingReader</name>
        <qualifiedname>tracktable::StringTokenizingReader::~StringTokenizingReader</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="111" column="11" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a8eae929bc9222f47a9c95ec374bb585f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::set_field_delimiter</definition>
        <argsstring>(string_type const &amp;delim)</argsstring>
        <name>set_field_delimiter</name>
        <qualifiedname>tracktable::StringTokenizingReader::set_field_delimiter</qualifiedname>
        <param>
          <type>string_type const &amp;</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
<para>Set the delimiter character to use in tokenization. </para>
        </briefdescription>
        <detaileddescription>
<para>The single character in the string you supply will be used as a field delimiter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">delim</parametername>
</parameternamelist>
<parameterdescription>
<para>Delimiter character to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="122" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a29b7cef3f45f43a812c8b4850613cafb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string_type</type>
        <definition>string_type tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::field_delimiter</definition>
        <argsstring>() const</argsstring>
        <name>field_delimiter</name>
        <qualifiedname>tracktable::StringTokenizingReader::field_delimiter</qualifiedname>
        <briefdescription>
<para>Return the delimiter character currently in use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="129" column="15" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a8c0ad03f9082c6654837376d53670f36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::set_escape_character</definition>
        <argsstring>(string_type const &amp;escape)</argsstring>
        <name>set_escape_character</name>
        <qualifiedname>tracktable::StringTokenizingReader::set_escape_character</qualifiedname>
        <param>
          <type>string_type const &amp;</type>
          <declname>escape</declname>
        </param>
        <briefdescription>
<para>Set the escape character to use in tokenization. </para>
        </briefdescription>
        <detaileddescription>
<para>You must supply a string with either 0 or 1 character to be used as an escape character. The escape character removes the special properties of whatever character follows, usually a newline, separator or quote character.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">escape</parametername>
</parameternamelist>
<parameterdescription>
<para>Escape character to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="143" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a1be07a13fe38dd1c7445011b1d259723" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string_type</type>
        <definition>string_type tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::escape_character</definition>
        <argsstring>() const</argsstring>
        <name>escape_character</name>
        <qualifiedname>tracktable::StringTokenizingReader::escape_character</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The escape characters currently in use. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="150" column="15" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1aba9df9bf4af3787d46af59032ad24e6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::set_quote_character</definition>
        <argsstring>(string_type const &amp;quote)</argsstring>
        <name>set_quote_character</name>
        <qualifiedname>tracktable::StringTokenizingReader::set_quote_character</qualifiedname>
        <param>
          <type>string_type const &amp;</type>
          <declname>quote</declname>
        </param>
        <briefdescription>
<para>Set the quote character to use in tokenization. </para>
        </briefdescription>
        <detaileddescription>
<para>The single character in the string you supply (assuming it is not empty) will be used as a quote character. Inside a quoted string (a string that begins and ends with the quote character), field delimiters (e.g. comma) will be ignored. Also, inside a quoted string, embedded quote characters must be escaped.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">quote</parametername>
</parameternamelist>
<parameterdescription>
<para>Quote character to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="165" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a6579ae289362c0f78bc8057101bdf1df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string_type</type>
        <definition>string_type tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::quote_character</definition>
        <argsstring>() const</argsstring>
        <name>quote_character</name>
        <qualifiedname>tracktable::StringTokenizingReader::quote_character</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the quote characters currently in use. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="172" column="15" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a8333d4d20d296b765374813928c7c5d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_string_tokenizing_reader" kindref="compound">StringTokenizingReader</ref> &amp;</type>
        <definition>StringTokenizingReader &amp; tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::operator=</definition>
        <argsstring>(StringTokenizingReader const &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>tracktable::StringTokenizingReader::operator=</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1_string_tokenizing_reader" kindref="compound">StringTokenizingReader</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Assign a <ref refid="classtracktable_1_1_string_tokenizing_reader" kindref="compound">StringTokenizingReader</ref> to the value of another. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtracktable_1_1_string_tokenizing_reader" kindref="compound">StringTokenizingReader</ref> to assign value of </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reader with the new assigned value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="182" column="26" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="182" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a005c819200db166e8d7b5d30c618f665" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::operator==</definition>
        <argsstring>(StringTokenizingReader const &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>tracktable::StringTokenizingReader::operator==</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1_string_tokenizing_reader" kindref="compound">StringTokenizingReader</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Check whether one reader is equal to another by comparing all the properties. </para>
        </briefdescription>
        <detaileddescription>
<para>Two readers are equal if all of their properties are equal.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtracktable_1_1_string_tokenizing_reader" kindref="compound">StringTokenizingReader</ref> for comparison </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating equivalency </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="199" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="199" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a38b06bf1823aa1e28f04cd20a7d09e73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::operator!=</definition>
        <argsstring>(StringTokenizingReader const &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>tracktable::StringTokenizingReader::operator!=</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1_string_tokenizing_reader" kindref="compound">StringTokenizingReader</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Check whether two <ref refid="classtracktable_1_1_string_tokenizing_reader" kindref="compound">StringTokenizingReader</ref> are unequal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtracktable_1_1_string_tokenizing_reader" kindref="compound">StringTokenizingReader</ref> for comparison </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating equivalency </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="215" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a0e1cddf9acc864855effcf0beac9f22c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::set_input_range</definition>
        <argsstring>(input_line_iter_type const &amp;start, input_line_iter_type const &amp;finish)</argsstring>
        <name>set_input_range</name>
        <qualifiedname>tracktable::StringTokenizingReader::set_input_range</qualifiedname>
        <param>
          <type>input_line_iter_type const &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>input_line_iter_type const &amp;</type>
          <declname>finish</declname>
        </param>
        <briefdescription>
<para>Set the beginning and the end of the input range. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator to use for the start of input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">finish</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator to use for the end of input </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="225" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="225" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a03a5003d1ebb990599534d157b4c3840" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_string_tokenizing_reader_1_1_tokenized_string_iterator" kindref="compound">iterator</ref></type>
        <definition>iterator tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>tracktable::StringTokenizingReader::begin</qualifiedname>
        <briefdescription>
<para>Return an iterator to the first parsed point. </para>
        </briefdescription>
        <detaileddescription>
<para>This will take the parameters you&apos;ve established for the input stream, comment character, delimiters and field/column mapping and start up the whole parsing pipeline. You can iterate through in the standard C++ fashion until you reach the <computeroutput><ref refid="classtracktable_1_1_string_tokenizing_reader_1a75267a61fad060bf9c6676ac9e76fb33" kindref="member">end()</ref></computeroutput>.</para>
<para><simplesect kind="note"><para>Any changes you make to the parser configuration will invalidate existing iterators.</para>
</simplesect>
<simplesect kind="return"><para>Iterator to first parsed point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="446" column="12" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="446" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a75267a61fad060bf9c6676ac9e76fb33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_string_tokenizing_reader_1_1_tokenized_string_iterator" kindref="compound">iterator</ref></type>
        <definition>iterator tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>tracktable::StringTokenizingReader::end</qualifiedname>
        <briefdescription>
<para>Return an iterator to detect when parsing has ended. </para>
        </briefdescription>
        <detaileddescription>
<para>This iterator is guaranteed to not point at any valid <ref refid="classtracktable_1_1_trajectory_point" kindref="compound">TrajectoryPoint</ref>. The only time when <computeroutput><ref refid="classtracktable_1_1_string_tokenizing_reader_1a03a5003d1ebb990599534d157b4c3840" kindref="member">begin()</ref> == <ref refid="classtracktable_1_1_string_tokenizing_reader_1a75267a61fad060bf9c6676ac9e76fb33" kindref="member">end()</ref></computeroutput> will be when all points have been parsed from the input stream.</para>
<para><simplesect kind="return"><para>Iterator past end of point sequence </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="459" column="12" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="459" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a7956e50ca9949fe6e8d17d872a3a0567" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::const_begin</definition>
        <argsstring>() const</argsstring>
        <name>const_begin</name>
        <qualifiedname>tracktable::StringTokenizingReader::const_begin</qualifiedname>
        <briefdescription>
<para>Get an iterator pointing to the beginning of the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator pointing to current stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="468" column="18" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="468" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_string_tokenizing_reader_1a2224bed36a3e9dfaa4ad27a458257b0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator tracktable::StringTokenizingReader&lt; InputLineIteratorT &gt;::const_end</definition>
        <argsstring>() const</argsstring>
        <name>const_end</name>
        <qualifiedname>tracktable::StringTokenizingReader::const_end</qualifiedname>
        <briefdescription>
<para>Get an iterator pointing to the end of the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Iterator pointing to end of current stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="477" column="18" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="477" bodyend="480"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Iterate over a range of input strings and tokenize each one. </para>
    </briefdescription>
    <detaileddescription>
<para>This is the third of four steps in the pipeline of reading points in from a file. The first is to read in a file line-by-line. The second is to filter out those lines that are comments. The third is to tokenize the lines that survive into little bits that we can then use to populate a point. </para>
    </detaileddescription>
    <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" line="58" column="1" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/RW/StringTokenizingReader.h" bodystart="59" bodyend="481"/>
    <listofallmembers>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a03a5003d1ebb990599534d157b4c3840" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>begin</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a7956e50ca9949fe6e8d17d872a3a0567" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>const_begin</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a2224bed36a3e9dfaa4ad27a458257b0d" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>const_end</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a08c92ae072c4729dd3d5f4083768e3f1" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>const_iterator</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a75267a61fad060bf9c6676ac9e76fb33" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>end</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a1be07a13fe38dd1c7445011b1d259723" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>escape_character</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a8e8c9e02103f69f7a91f69a9d996a2b3" prot="private" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>EscapeCharacter</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a29b7cef3f45f43a812c8b4850613cafb" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>field_delimiter</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a17c4b5ef2988adbbd0518a33fab67280" prot="private" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>FieldDelimiter</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a4c48904eb3ea6ce84379757c45f8dd64" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>input_line_iter_type</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a59e27a91dc1bebe3b5f443c38c674c5a" prot="private" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>InputLinesBegin</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1aeec6d332a322417fd6bd733e434c82db" prot="private" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>InputLinesEnd</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a7ef3eb9e91da481d2ee73868f35f6570" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>iterator</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a38b06bf1823aa1e28f04cd20a7d09e73" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>operator!=</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a8333d4d20d296b765374813928c7c5d0" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>operator=</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a005c819200db166e8d7b5d30c618f665" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>operator==</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a6579ae289362c0f78bc8057101bdf1df" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>quote_character</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a362d42c52a309368de3fa4cafc135b8c" prot="private" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>QuoteCharacter</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a033dd6b8e0d2221f7b733045b27bb464" prot="private" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>separator_type</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a8c0ad03f9082c6654837376d53670f36" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>set_escape_character</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a8eae929bc9222f47a9c95ec374bb585f" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>set_field_delimiter</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a0e1cddf9acc864855effcf0beac9f22c" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>set_input_range</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1aba9df9bf4af3787d46af59032ad24e6f" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>set_quote_character</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1ac9b02faa2f776a341492e8f61be9ff8c" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>string_type</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1ae5b38bd16a6ed1c6a49a9bcf08c88dfa" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>StringTokenizingReader</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1ac408549c6963d46731fd41918412e6da" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>StringTokenizingReader</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a4e7ec4a2910a0d0f2c6cbc01e0e88b36" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>StringTokenizingReader</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a3c8b8538f0742d3e12a320415e6ebe08" prot="public" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>StringTokenizingReader</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1afdb8f20a40d901ec7dbfa3041f727fd0" prot="private" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>token_iterator_pair</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a3b6f189167b246fe5b2755a6e0b0f02c" prot="private" virt="non-virtual"><scope>tracktable::StringTokenizingReader</scope><name>tokenizer_type</name></member>
      <member refid="classtracktable_1_1_string_tokenizing_reader_1a9d8b8490b187cee9e0497dde3161562c" prot="public" virt="virtual"><scope>tracktable::StringTokenizingReader</scope><name>~StringTokenizingReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
