<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classtracktable_1_1_point_base" kind="class" language="C++" prot="public">
    <compoundname>tracktable::PointBase</compoundname>
    <derivedcompoundref refid="classtracktable_1_1_point_cartesian" prot="public" virt="non-virtual">tracktable::PointCartesian&lt; 2 &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtracktable_1_1_point_cartesian" prot="public" virt="non-virtual">tracktable::PointCartesian&lt; 3 &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtracktable_1_1_point_cartesian" prot="public" virt="non-virtual">tracktable::PointCartesian&lt; dim &gt;</derivedcompoundref>
    <derivedcompoundref refid="classtracktable_1_1_point_cartesian" prot="public" virt="non-virtual">tracktable::PointCartesian&lt; Dimension &gt;</derivedcompoundref>
    <includes refid="_point_base_8h" local="no">PointBase.h</includes>
    <templateparamlist>
      <param>
        <type>std::size_t</type>
        <declname>Dimension</declname>
        <defname>Dimension</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtracktable_1_1_point_base_1a2b5d66d132636bb41831a09667f6e640" prot="public" static="no">
        <type>tracktable::settings::point_coordinate_type</type>
        <definition>typedef tracktable::settings::point_coordinate_type tracktable::PointBase&lt; Dimension &gt;::element_type</definition>
        <argsstring></argsstring>
        <name>element_type</name>
        <qualifiedname>tracktable::PointBase::element_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="89" column="55" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="89" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtracktable_1_1_point_base_1a2aba212a90c51c5f4e9fa76fe679146a" prot="protected" static="no" mutable="no">
        <type>coordinate_type</type>
        <definition>coordinate_type tracktable::PointBase&lt; Dimension &gt;::Coordinates[Dimension]</definition>
        <argsstring>[Dimension]</argsstring>
        <name>Coordinates</name>
        <qualifiedname>tracktable::PointBase::Coordinates</qualifiedname>
        <briefdescription>
<para>Storage for the coordinate values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="246" column="19" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="246" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classtracktable_1_1_point_base_1ae25b06b76872599f16950c866529d096" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::PointBase&lt; Dimension &gt;::PointBase</definition>
        <argsstring>()</argsstring>
        <name>PointBase</name>
        <qualifiedname>tracktable::PointBase::PointBase</qualifiedname>
        <briefdescription>
<para>Initialize an empty point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="92" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_point_base_1aab715197cb725a115bdbae588649f795" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tracktable::PointBase&lt; Dimension &gt;::PointBase</definition>
        <argsstring>(PointBase const &amp;other)</argsstring>
        <name>PointBase</name>
        <qualifiedname>tracktable::PointBase::PointBase</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy contructor, create a <ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> with a copy of another. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> to copy from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="103" column="3" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_point_base_1af616577253186b1d80c7ab90338640e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual tracktable::PointBase&lt; Dimension &gt;::~PointBase</definition>
        <argsstring>()</argsstring>
        <name>~PointBase</name>
        <qualifiedname>tracktable::PointBase::~PointBase</qualifiedname>
        <briefdescription>
<para>Destructor for our descendants. </para>
        </briefdescription>
        <detaileddescription>
<para>Although <ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> itself only needs a trivial destructor, we know that subclasses are going to extend it one way or another. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="113" column="11" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_point_base_1a7918dde3ef618e4497d9949e515a5fd5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>d</declname>
            <defname>d</defname>
          </param>
        </templateparamlist>
        <type>coordinate_type const &amp;</type>
        <definition>coordinate_type const  &amp; tracktable::PointBase&lt; Dimension &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <qualifiedname>tracktable::PointBase::get</qualifiedname>
        <briefdescription>
<para>Get the value of a particular coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para>Since this is Boost, you set and get coordinates by specifying the coordinate at compile time:</para>
<para><programlisting><codeline><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>point.get&lt;0&gt;();</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>The value of a particular coordinate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="130" column="25" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_point_base_1aece26ecf39982722de53187fe0e1531b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>d</declname>
            <defname>d</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tracktable::PointBase&lt; Dimension &gt;::set</definition>
        <argsstring>(coordinate_type const &amp;new_value)</argsstring>
        <name>set</name>
        <qualifiedname>tracktable::PointBase::set</qualifiedname>
        <param>
          <type>coordinate_type const &amp;</type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
<para>Set the value of a particular coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para>Since this is Boost, you set and get coordinates by specifying the coordinate at compile time:</para>
<para><programlisting><codeline><highlight class="normal">point.set&lt;0&gt;(new_value);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">new_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to assign to the coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="152" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="152" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_point_base_1a1c2237aff8b2b8dec8b934feb10d79c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>coordinate_type const &amp;</type>
        <definition>coordinate_type const  &amp; tracktable::PointBase&lt; Dimension &gt;::operator[]</definition>
        <argsstring>(std::size_t d) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>tracktable::PointBase::operator[]</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Get/set the value of a coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para>You can use operator[] whether or not you know the coordinate you want ahead of time.</para>
<para><programlisting><codeline><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>point[0];</highlight></codeline>
<codeline><highlight class="normal">point[0]<sp/>=<sp/>x;</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>The value of the coordinate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="174" column="25" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_point_base_1a1ea12444b1425cf2462e2920cac1b499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>coordinate_type &amp;</type>
        <definition>coordinate_type &amp; tracktable::PointBase&lt; Dimension &gt;::operator[]</definition>
        <argsstring>(std::size_t d)</argsstring>
        <name>operator[]</name>
        <qualifiedname>tracktable::PointBase::operator[]</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Get/set the value of a coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para>You can use operator[] whether or not you know the coordinate you want ahead of time.</para>
<para><programlisting><codeline><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>point[0];</highlight></codeline>
<codeline><highlight class="normal">point[0]<sp/>=<sp/>x;</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>The value of the coordinate </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="195" column="19" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="195" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_point_base_1a35cfaef9ac15a33040e2458d99d980e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tracktable::PointBase&lt; Dimension &gt;::operator==</definition>
        <argsstring>(PointBase const &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>tracktable::PointBase::operator==</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Check two points for equality. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This requires that the two points have the same dimension.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> for comparison </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating equivalency </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="209" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_point_base_1ac225c66d4cfab081b67f95d4411b0fdd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tracktable::PointBase&lt; Dimension &gt;::operator!=</definition>
        <argsstring>(PointBase const &amp;other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>tracktable::PointBase::operator!=</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Check two points for inequality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> for comparison </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean indicating equivalency </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="219" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classtracktable_1_1_point_base_1a236bf3c4a5a1128bea753ad59f7d2594" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> &amp;</type>
        <definition>PointBase &amp; tracktable::PointBase&lt; Dimension &gt;::operator=</definition>
        <argsstring>(PointBase const &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>tracktable::PointBase::operator=</qualifiedname>
        <param>
          <type><ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Make this point a copy of a different one. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> to assign value of </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> with the new assigned value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="229" column="13" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="229" bodyend="233"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtracktable_1_1_point_base_1a00baacc4de3a9c9cf3f3f39af19aa7de" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static constexpr std::size_t tracktable::PointBase&lt; Dimension &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>tracktable::PointBase::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of dimensions in this point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="239" column="32" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="239" bodyend="242"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtracktable_1_1_point_base_1a8829a6c52e157dd0a28ad3148d89d587" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void tracktable::PointBase&lt; Dimension &gt;::serialize</definition>
        <argsstring>(Archive &amp;ar, const unsigned int)</argsstring>
        <name>serialize</name>
        <qualifiedname>tracktable::PointBase::serialize</qualifiedname>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const unsigned int</type>
        </param>
        <briefdescription>
<para>Serialize the coordinates to an archive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ar</parametername>
</parameternamelist>
<parameterdescription>
<para>Archive to serialize to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">version</parametername>
</parameternamelist>
<parameterdescription>
<para>Version of the archive </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="254" column="8" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="254" bodyend="257"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for all points in Tracktable. </para>
    </briefdescription>
    <detaileddescription>
<para>This class defines a point independent of the number of coordinates or the data type.</para>
<para><simplesect kind="note"><para>You will not use this directly. Instead, you&apos;ll use one of the coordinate-specific versions like PointBaseCartesian or PointBaseLonLat.</para>
</simplesect>
<ref refid="classtracktable_1_1_point_base" kindref="compound">PointBase</ref> and all of its subclasses will be registered with <computeroutput>boost::geometry</computeroutput> so that you can use all of the generic geometry algorithms. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>tracktable::PointBase&lt; Dimension &gt;</label>
        <link refid="classtracktable_1_1_point_base"/>
      </node>
      <node id="2">
        <label>tracktable::PointCartesian&lt; 2 &gt;</label>
        <link refid="classtracktable_1_1_point_cartesian"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>tracktable::PointCartesian&lt; 3 &gt;</label>
        <link refid="classtracktable_1_1_point_cartesian"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>tracktable::PointCartesian&lt; Dimension &gt;</label>
        <link refid="classtracktable_1_1_point_cartesian"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>tracktable::PointCartesian&lt; dim &gt;</label>
        <link refid="classtracktable_1_1_point_cartesian"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>tracktable::TrajectoryPoint&lt; CartesianPoint3D &gt;</label>
        <link refid="classtracktable_1_1_trajectory_point"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>tracktable::domain::cartesian2d::CartesianPoint2D</label>
        <link refid="classtracktable_1_1domain_1_1cartesian2d_1_1_cartesian_point2_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>tracktable::domain::cartesian3d::CartesianPoint3D</label>
        <link refid="classtracktable_1_1domain_1_1cartesian3d_1_1_cartesian_point3_d"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>tracktable::domain::cartesian3d::CartesianTrajectoryPoint3D</label>
        <link refid="classtracktable_1_1domain_1_1cartesian3d_1_1_cartesian_trajectory_point3_d"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>tracktable::domain::feature_vectors::FeatureVector&lt; dim &gt;</label>
        <link refid="classtracktable_1_1domain_1_1feature__vectors_1_1_feature_vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" line="83" column="1" bodyfile="/Users/atwilso/projects/rtd_debug/rtd_debug/src/tracktable/cpp/Core/PointBase.h" bodystart="84" bodyend="259"/>
    <listofallmembers>
      <member refid="classtracktable_1_1_point_base_1a2aba212a90c51c5f4e9fa76fe679146a" prot="protected" virt="non-virtual"><scope>tracktable::PointBase</scope><name>Coordinates</name></member>
      <member refid="classtracktable_1_1_point_base_1a2b5d66d132636bb41831a09667f6e640" prot="public" virt="non-virtual"><scope>tracktable::PointBase</scope><name>element_type</name></member>
      <member refid="classtracktable_1_1_point_base_1a7918dde3ef618e4497d9949e515a5fd5" prot="public" virt="non-virtual"><scope>tracktable::PointBase</scope><name>get</name></member>
      <member refid="classtracktable_1_1_point_base_1ac225c66d4cfab081b67f95d4411b0fdd" prot="public" virt="non-virtual"><scope>tracktable::PointBase</scope><name>operator!=</name></member>
      <member refid="classtracktable_1_1_point_base_1a236bf3c4a5a1128bea753ad59f7d2594" prot="public" virt="non-virtual"><scope>tracktable::PointBase</scope><name>operator=</name></member>
      <member refid="classtracktable_1_1_point_base_1a35cfaef9ac15a33040e2458d99d980e3" prot="public" virt="non-virtual"><scope>tracktable::PointBase</scope><name>operator==</name></member>
      <member refid="classtracktable_1_1_point_base_1a1c2237aff8b2b8dec8b934feb10d79c6" prot="public" virt="non-virtual"><scope>tracktable::PointBase</scope><name>operator[]</name></member>
      <member refid="classtracktable_1_1_point_base_1a1ea12444b1425cf2462e2920cac1b499" prot="public" virt="non-virtual"><scope>tracktable::PointBase</scope><name>operator[]</name></member>
      <member refid="classtracktable_1_1_point_base_1ae25b06b76872599f16950c866529d096" prot="public" virt="non-virtual"><scope>tracktable::PointBase</scope><name>PointBase</name></member>
      <member refid="classtracktable_1_1_point_base_1aab715197cb725a115bdbae588649f795" prot="public" virt="non-virtual"><scope>tracktable::PointBase</scope><name>PointBase</name></member>
      <member refid="classtracktable_1_1_point_base_1a8829a6c52e157dd0a28ad3148d89d587" prot="protected" virt="non-virtual"><scope>tracktable::PointBase</scope><name>serialize</name></member>
      <member refid="classtracktable_1_1_point_base_1aece26ecf39982722de53187fe0e1531b" prot="public" virt="non-virtual"><scope>tracktable::PointBase</scope><name>set</name></member>
      <member refid="classtracktable_1_1_point_base_1a00baacc4de3a9c9cf3f3f39af19aa7de" prot="public" virt="non-virtual"><scope>tracktable::PointBase</scope><name>size</name></member>
      <member refid="classtracktable_1_1_point_base_1af616577253186b1d80c7ab90338640e2" prot="public" virt="virtual"><scope>tracktable::PointBase</scope><name>~PointBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
